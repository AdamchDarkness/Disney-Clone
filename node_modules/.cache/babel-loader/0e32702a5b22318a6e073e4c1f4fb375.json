{"ast":null,"code":"import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\nvar name = \"@firebase/database\";\nvar version = \"0.9.10\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\nvar DOMStorageWrapper = /** @class */function () {\n  /**\r\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_;\n    // Use a prefix to avoid collisions with other stuff saved by the app.\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key - The key to save the value under\r\n   * @param value - The value being stored, or null to remove the key.\r\n   */\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @returns The value that was stored under this key, or null\r\n   */\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n  return DOMStorageWrapper;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\nvar MemoryStorage = /** @class */function () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  };\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n  return MemoryStorage;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\nvar createStoragefor = function (domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\nvar sha1 = function (str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\nvar buildLogMessage_ = function () {\n  var varArgs = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n  var message = '';\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n    if (Array.isArray(arg) || arg && typeof arg === 'object' &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\nvar enableLogging = function (logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\nvar log = function () {\n  var varArgs = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\nvar logWrapper = function (prefix) {\n  return function () {\n    var varArgs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n  };\n};\nvar error = function () {\n  var varArgs = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n};\nvar fatal = function () {\n  var varArgs = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n  throw new Error(message);\n};\nvar warn = function () {\n  var varArgs = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\nvar warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\nvar isInvalidJSONNumber = function (data) {\n  return typeof data === 'number' && (data !== data ||\n  // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\nvar executeWhenDOMReady = function (fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n    var wrappedFn_1 = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn_1, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      window.attachEvent('onload', wrappedFn_1);\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\nvar nameCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @returns {!number} comparison result.\r\n */\nvar stringCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\nvar requireKey = function (key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\nvar ObjectToUniqueKey = function (obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n  var keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (var k in obj) {\n    keys.push(k);\n  }\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  var key = '{';\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\nvar splitStringBySize = function (str, segsize) {\n  var len = str.length;\n  if (len <= segsize) {\n    return [str];\n  }\n  var dataSegs = [];\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\nvar doubleToIEEE754String = function (v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n  var ebits = 11,\n    fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i;\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n  // Pack sign, exponent, fraction\n  var bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join('');\n  // Return the data as a hex string. --MJL\n  var hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\nvar isChromeExtensionContentScript = function () {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\nvar isWindowsStoreApp = function () {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\nfunction errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n  var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error.code = code.toUpperCase();\n  return error;\n}\n/**\r\n * Used to test for integer-looking strings\r\n */\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\nvar tryParseInt = function (str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\nvar exceptionGuard = function (fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\nvar beingCrawled = function () {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || '';\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\nvar setTimeoutNonBlocking = function (fn, time) {\n  var timeout = setTimeout(fn, time);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n  return timeout;\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\nvar FirebaseAuthTokenProvider = /** @class */function () {\n  function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\n    var _this = this;\n    this.appName_ = appName_;\n    this.firebaseOptions_ = firebaseOptions_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.appName_ + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  };\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\nvar EmulatorAdminTokenProvider = /** @class */function () {\n  function EmulatorAdminTokenProvider() {}\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f';\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A class that holds metadata about a Repo object\r\n */\nvar RepoInfo = /** @class */function () {\n  /**\r\n   * @param host - Hostname portion of the url for the repo\r\n   * @param secure - Whether or not this repo is accessed over ssl\r\n   * @param namespace - The namespace represented by the repo\r\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey - Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this._host;\n  }\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n  RepoInfo.prototype.isCustomHost = function () {\n    return this._domain !== 'firebaseio.com' && this._domain !== 'firebaseio-demo.com';\n  };\n  Object.defineProperty(RepoInfo.prototype, \"host\", {\n    get: function () {\n      return this._host;\n    },\n    set: function (newHost) {\n      if (newHost !== this.internalHost) {\n        this.internalHost = newHost;\n        if (this.isCacheableHost()) {\n          PersistentStorage.set('host:' + this._host, this.internalHost);\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  };\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n  return RepoInfo;\n}();\nfunction repoInfoNeedsQueryParam(repoInfo) {\n  return repoInfo.host !== repoInfo.internalHost || repoInfo.isCustomHost() || repoInfo.includeNamespaceInQueryParams;\n}\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\nfunction repoInfoConnectionURL(repoInfo, type, params) {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n  var connURL;\n  if (type === WEBSOCKET) {\n    connURL = (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL = (repoInfo.secure ? 'https://' : 'http://') + repoInfo.internalHost + '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n  var pairs = [];\n  each(params, function (key, value) {\n    pairs.push(key + '=' + value);\n  });\n  return connURL + pairs.join('&');\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Tracks a collection of stats.\r\n */\nvar StatsCollection = /** @class */function () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n    this.counters_[name] += amount;\n  };\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n  return StatsCollection;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar collections = {};\nvar reporters = {};\nfunction statsManagerGetCollection(repoInfo) {\n  var hashString = repoInfo.toString();\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n  return collections[hashString];\n}\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\n  var hashString = repoInfo.toString();\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n  return reporters[hashString];\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\nvar PacketReceiver = /** @class */function () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n    this.pendingResponses[requestNum] = data;\n    var _loop_1 = function () {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n      var _loop_2 = function (i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n        return \"break\";\n      }\n      this_1.currentResponseNum++;\n    };\n    var this_1 = this;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n      if (state_1 === \"break\") break;\n    }\n  };\n  return PacketReceiver;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\nvar BrowserPollConnection = /** @class */function () {\n  /**\r\n   * @param connId - An identifier for this connection, used for logging\r\n   * @param repoInfo - The info for the endpoint to send data to.\r\n   * @param applicationId - The Firebase App ID for this project.\r\n   * @param transportSessionId - Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId - Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = function (params) {\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      _this.onClosed_();\n      _this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT));\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      }\n      //Set up a callback that gets triggered once a connection is set up.\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var _a = __read(args, 5),\n          command = _a[0],\n          arg1 = _a[1],\n          arg2 = _a[2],\n          arg3 = _a[3],\n          arg4 = _a[4];\n        _this.incrementIncomingBytes_(args);\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n        _this.everConnected_ = true;\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false;\n            // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var _a = __read(args, 2),\n          pN = _a[0],\n          data = _a[1];\n        _this.incrementIncomingBytes_(args);\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn);\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      var connectURL = _this.urlFn(urlParams);\n      _this.log_('Connecting via long-poll to ' + connectURL);\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  };\n  // Static method, use string literal so it can be accessed in a generic way\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data - The JSON data to transmit.\r\n   */\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n    //first, lets get the base64-encoded data\n    var base64data = base64Encode(dataStr);\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\nvar FirebaseIFrameScriptHolder = /** @class */function () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn;\n    //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n    this.outstandingRequests = new Set();\n    //A queue of the pending segments waiting for transmission to the server.\n    this.pendingSegs = [];\n    //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n    this.currentSerial = Math.floor(Math.random() * 100000000);\n    // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n    this.sendNewPolls = true;\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n      // Set the iframe's contents.\n      var script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      var iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this;\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n    // Protect from being called recursively.\n    var onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      var curDataString = '';\n      var i = 0;\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    });\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this;\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n    var doNewRequest = function () {\n      _this.outstandingRequests.delete(serial);\n      _this.newRequest_();\n    };\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n    var readyStateCB = function () {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n              loadCB();\n            }\n          };\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n            _this.close();\n          };\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n  return FirebaseIFrameScriptHolder;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** The semver (www.semver.org) version of the SDK. */\nvar SDK_VERSION = '';\n// SDK_VERSION should be set before any database instance is created\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\nvar WebSocketConnection = /** @class */function () {\n  /**\r\n   * @param connId - identifier for this transport\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param applicationId - The Firebase App ID for this project.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   * @returns connection url\r\n   */\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n      _this.everConnected_ = true;\n    };\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n      _this.mySock = null;\n      _this.onClosed_();\n    };\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var error = e.message || e.data;\n      if (error) {\n        _this.log_(error);\n      }\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n  WebSocketConnection.prototype.start = function () {};\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess);\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount - The number of frames we are expecting from the server\r\n   */\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @returns Any remaining data to be process, or null if there is none\r\n   */\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess - The frame data\r\n   */\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data - The JSON object to transmit\r\n   */\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n    //Send the actual data in segments.\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n      _this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str - String to send.\r\n   */\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\nvar TransportManager = /** @class */function () {\n  /**\r\n   * @param repoInfo - Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function () {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n      isSkipPollConnection = true;\n    }\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @returns The constructor for the initial transport to use\r\n   */\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @returns The constructor for the next transport, or null\r\n   */\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n  return TransportManager;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT = 60000;\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\nvar Connection = /** @class */function () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0 /* CONNECTING */;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n  Connection.prototype.start_ = function () {\n    var _this = this;\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n            _this.isHealthy_ = true;\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.');\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n            _this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n    return function (message) {\n      if (_this.state_ !== 2 /* DISCONNECTED */) {\n        if (conn === _this.rx_) {\n          _this.onPrimaryMessageReceived_(message);\n        } else if (conn === _this.secondaryConn_) {\n          _this.onSecondaryMessageReceived_(message);\n        } else {\n          _this.log_('message on old connection');\n        }\n      }\n    };\n  };\n  /**\r\n   * @param dataMsg - An arbitrary data message to be sent to the server\r\n   */\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  };\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    });\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_();\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  };\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake - The handshake data returned from the server\r\n   */\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === 0 /* CONNECTING */) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  };\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === 1 /* CONNECTED */) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1 /* CONNECTED */;\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\n      this.log_('sending ping on primary.');\n      this.sendData_({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null;\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === 0 /* CONNECTING */) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === 1 /* CONNECTED */) {\n      this.log_('Realtime connection lost.');\n    }\n    this.close();\n  };\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n    this.close();\n  };\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1 /* CONNECTED */) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2 /* DISCONNECTED */) {\n      this.log_('Closing realtime connection.');\n      this.state_ = 2 /* DISCONNECTED */;\n      this.closeConnections_();\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n  return Connection;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\nvar ServerActions = /** @class */function () {\n  function ServerActions() {}\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token - The authentication token\r\n   */\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  ServerActions.prototype.reportStats = function (stats) {};\n  return ServerActions;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\nvar EventEmitter = /** @class */function () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spreadArray([], __read(this.listeners_[eventType]));\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n  return EventEmitter;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\nvar OnlineMonitor = /** @class */function (_super) {\n  __extends(OnlineMonitor, _super);\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n    _this.online_ = true;\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n    return _this;\n  }\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n  return OnlineMonitor;\n}(EventEmitter);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Maximum key depth. */\nvar MAX_PATH_DEPTH = 32;\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nvar MAX_PATH_LENGTH_BYTES = 768;\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\nvar Path = /** @class */function () {\n  /**\r\n   * @param pathOrString - Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/');\n      // Remove empty pieces.\n      var copyTo = 0;\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n  Path.prototype.toString = function () {\n    var pathString = '';\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n    return pathString || '/';\n  };\n  return Path;\n}();\nfunction newEmptyPath() {\n  return new Path('');\n}\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @returns The number of segments in this path\r\n */\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n  return null;\n}\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n  var pieces = [];\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n  return new Path(pieces, 0);\n}\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n  return new Path(pieces, 0);\n}\n/**\r\n * @returns True if there are no segments in this path\r\n */\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @returns true if paths are the same.\r\n */\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\nvar ValidationPath = /** @class */function () {\n  /**\r\n   * @param path - Initial Path.\r\n   * @param errorPrefix_ - Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n  return ValidationPath;\n}();\nfunction validationPathPush(validationPath, child) {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\nfunction validationPathPop(validationPath) {\n  var last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\nfunction validationPathCheckValid(validationPath) {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(validationPath.errorPrefix_ + 'has a key path longer than ' + MAX_PATH_LENGTH_BYTES + ' bytes (' + validationPath.byteLength_ + ').');\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(validationPath.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + MAX_PATH_DEPTH + ') or object contains a cycle ' + validationPathToErrorString(validationPath));\n  }\n}\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\nfunction validationPathToErrorString(validationPath) {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar VisibilityMonitor = /** @class */function (_super) {\n  __extends(VisibilityMonitor, _super);\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n    var hidden;\n    var visibilityChange;\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    _this.visible_ = true;\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n    return _this;\n  }\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n  return VisibilityMonitor;\n}(EventEmitter);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\nvar PersistentConnection = /** @class */function (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param applicationId_ - The Firebase App ID for this project\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_;\n    // Used for diagnostic logging.\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false;\n    // Before we get connected, we keep a queue of pending messages to send.\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n    _this.scheduleConnect_(0);\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n    return _this;\n  }\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n    var deferred = new Deferred();\n    var request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function (message) {\n        var payload = message['d'];\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload, /*isMerge*/false, /*tag*/null);\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n        _this.log_('get ' + index + ' timed out on connection');\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n    return deferred.promise;\n  };\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query._queryIdentifier;\n    var pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n    var query = listenSpec.query;\n    var pathString = query._path.toString();\n    var queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/p: pathString\n    };\n    var action = 'q';\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n    req[/*hash*/'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[/*data*/'d'];\n      var status = message[/*status*/'s'];\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        var indexPath = query._path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[/*status*/'s'];\n        var data = res[/*data*/'d'] || 'error';\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query._path.toString();\n    var queryId = query._queryIdentifier;\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  };\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/p: pathString\n    };\n    var action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n    this.sendRequest(action, req);\n  };\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/p: pathString,\n      /*data*/d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[/*status*/'s'], response[/* data */'d']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/p: pathString,\n      /*data*/d: data\n    };\n    if (hash !== undefined) {\n      request[/*hash*/'h'] = hash;\n    }\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--;\n      // Clean up array occasionally.\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n      if (onComplete) {\n        onComplete(message[/*status*/'s'], message[/* data */'d']);\n      }\n    });\n  };\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this;\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      var request = {\n        /*counters*/c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest( /*stats*/'s', request, function (result) {\n        var status = result[/*status*/'s'];\n        if (status !== 'ok') {\n          var errorReason = result[/* data */'d'];\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(body[/*path*/'p'], body[/*data*/'d'], /*isMerge*/false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[/*path*/'p'], body[/*data*/'d'], /*isMerge=*/true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[/*path*/'p'], body[/*query*/'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[/*status code*/'s'], body[/* explanation */'d']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n      _this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout));\n  };\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  };\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n    this.onConnectStatus_(false);\n  };\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n      var closeFn_1 = function () {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n      var sendRequestFn = function (msg) {\n        assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n      // First fetch auth token, and establish connection after fetching the token was successful\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, /* onKill= */function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn_1();\n        }\n      });\n    }\n  };\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n      if (put && /*hash*/'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n    var listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n    var listen;\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  };\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b;\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  };\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar NamedNode = /** @class */function () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n  return NamedNode;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Index = /** @class */function () {\n  function Index() {}\n  /**\r\n   * @returns A standalone comparison function for\r\n   * this index\r\n   */\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @returns a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  return Index;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __EMPTY_NODE;\nvar KeyIndex = /** @class */function (_super) {\n  __extends(KeyIndex, _super);\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function () {\n      return __EMPTY_NODE;\n    },\n    set: function (val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n  return KeyIndex;\n}(Index);\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * An iterator over an LLRBNode.\r\n */\nvar SortedMapIterator = /** @class */function () {\n  /**\r\n   * @param node - Node to iterate.\r\n   * @param isReverse_ - Whether or not to iterate in reverse\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n    var node = this.nodeStack_.pop();\n    var result;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n    return result;\n  };\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\nvar LLRBNode = /** @class */function () {\n  /**\r\n   * @param key - Key associated with this node.\r\n   * @param value - Value associated with this node.\r\n   * @param color - Whether this node is red.\r\n   * @param left - Left child.\r\n   * @param right - Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key - New key for the node, or null.\r\n   * @param value - New value for the node, or null.\r\n   * @param color - New color for the node, or null.\r\n   * @param left - New left child for the node, or null.\r\n   * @param right - New right child for the node, or null.\r\n   * @returns The node copy.\r\n   */\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @returns The minimum node in the tree.\r\n   */\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key - Key to insert.\r\n   * @param value - Value to insert.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the key/value added.\r\n   */\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns New tree, with the minimum key removed.\r\n   */\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n    var n = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key - The key of the item to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the specified item removed.\r\n   */\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns Whether this is a RED node.\r\n   */\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @returns New tree after performing any needed rotations.\r\n   */\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedLeft.\r\n   */\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedRight.\r\n   */\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  };\n  /**\r\n   * @returns New tree, after rotateLeft.\r\n   */\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @returns New tree, after rotateRight.\r\n   */\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @returns Newt ree, after colorFlip.\r\n   */\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @returns True if all is well.\r\n   */\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n    var blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\nvar LLRBEmptyNode = /** @class */function () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @returns The node copy.\r\n   */\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item added.\r\n   */\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item removed.\r\n   */\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @returns Whether this node is red.\r\n   */\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\nvar SortedMap = /** @class */function () {\n  /**\r\n   * @param comparator_ - Key comparator.\r\n   * @param root_ - Optional root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @returns New map, with item added.\r\n   */\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @returns New map, with item removed.\r\n   */\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key - The key to look up.\r\n   * @returns The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key - The key to find the predecessor of\r\n   * @returns The predecessor key.\r\n   */\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @returns True if the map is empty.\r\n   */\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @returns The total number of nodes in the map.\r\n   */\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @returns The minimum key in the map.\r\n   */\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @returns The maximum key in the map.\r\n   */\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns True if the traversal was aborted.\r\n   */\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @returns The iterator.\r\n   */\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MAX_NODE;\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\nvar priorityHashText = function (priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\nvar validatePriorityNode = function (priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\nvar LeafNode = /** @class */function () {\n  /**\r\n   * @param value_ - The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ - The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function () {\n      return __childrenNodeConstructor;\n    },\n    set: function (val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n      var type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @returns The value of the node.\r\n   */\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  LeafNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar nodeFromJSON;\nvar MAX_NODE$1;\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\nvar PriorityIndex = /** @class */function (_super) {\n  __extends(PriorityIndex, _super);\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n  return PriorityIndex;\n}(Index);\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar LOG_2 = Math.log(2);\nvar Base12Num = /** @class */function () {\n  function Base12Num(length) {\n    var logBase2 = function (num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n    var bitMask = function (bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n  var buildBalancedTree = function (low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n  var buildFrom12Array = function (base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n    var buildPennant = function (chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n    var attachPennant = function (pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap(mapSortFn || cmp, root);\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _defaultIndexMap;\nvar fallbackObject = {};\nvar IndexMap = /** @class */function () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function () {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    var newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    var indexName = indexDefinition.toString();\n    var newIndexSet = __assign({}, this.indexSet_);\n    newIndexSet[indexName] = indexDefinition;\n    var newIndexes = __assign({}, this.indexes_);\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n            next = iter.getNext();\n          }\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  return IndexMap;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\nvar ChildrenNode = /** @class */function () {\n  /**\r\n   * @param children_ - List of children of this node..\r\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function () {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n        newIndexMap = void 0;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    var obj = {};\n    var numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = [];\n      // eslint-disable-next-line guard-for-in\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  };\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  };\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\nvar MaxNode = /** @class */function (_super) {\n  __extends(MaxNode, _super);\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PathIndex = /** @class */function (_super) {\n  __extends(PathIndex, _super);\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n  return PathIndex;\n}(Index);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ValueIndex = /** @class */function (_super) {\n  __extends(ValueIndex, _super);\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n  return ValueIndex;\n}(Index);\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0;\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\nvar successor = function (key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  var keyAsInt = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  var next = new Array(key.length);\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n  var i = next.length - 1;\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n};\n// `key` is assumed to be non-empty.\nvar predecessor = function (key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  var keyAsInt = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  var next = new Array(key.length);\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\" /* VALUE */,\n    snapshotNode: snapshotNode\n  };\n}\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\" /* CHILD_ADDED */,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\" /* CHILD_REMOVED */,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\" /* CHILD_CHANGED */,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\" /* CHILD_MOVED */,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\nvar IndexedFilter = /** @class */function () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  };\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  return IndexedFilter;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\nvar RangedFilter = /** @class */function () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    var filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n  return RangedFilter;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\nvar LimitedFilter = /** @class */function () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        var iterator = void 0;\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n        var count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n          cmp = function (a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n        var count = 0;\n        var foundStartPost = false;\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n      cmp = function (a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n  return LimitedFilter;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\nvar QueryParams = /** @class */function () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @returns True if it would return from left.\r\n   */\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @returns True if a limit has been set and it has been explicitly anchored\r\n   */\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n  return QueryParams;\n}();\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\n  return newParams;\n}\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\n  return newParams;\n}\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n  var orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\" /* PRIORITY_INDEX */;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\" /* VALUE_INDEX */;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\" /* KEY_INDEX */;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\n  if (queryParams.startSet_) {\n    qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\" /* START_AT */] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n  if (queryParams.endSet_) {\n    qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\" /* END_AT */] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\n    }\n  }\n  return qs;\n}\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n  if (queryParams.startSet_) {\n    obj[\"sp\" /* INDEX_START_VALUE */] = queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[\"sn\" /* INDEX_START_NAME */] = queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[\"l\" /* LIMIT */] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\" /* VIEW_FROM_LEFT */;\n      } else {\n        viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\n      }\n    }\n    obj[\"vf\" /* VIEW_FROM */] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\" /* INDEX */] = queryParams.index_.toString();\n  }\n  return obj;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\nvar ReadonlyRestClient = /** @class */function (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n    _this.listens_ = {};\n    return _this;\n  }\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\n      return query._path.toString();\n    }\n  };\n  /** @inheritDoc */\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n    var pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n    // Mark this listener so we can tell if it's removed.\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data, /*isMerge=*/false, tag);\n      }\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n    var pathString = query._path.toString();\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data, /*isMerge=*/false, /*tag=*/null);\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\n    // no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken( /*forceRefresh=*/false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n      _this.log_('Sending REST request for ' + url);\n      var xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n          var res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n      xhr.open('GET', url, /*asynchronous=*/true);\n      xhr.send();\n    });\n  };\n  return ReadonlyRestClient;\n}(ServerActions);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\nvar SnapshotHolder = /** @class */function () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n  return SnapshotHolder;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction newSparseSnapshotTree() {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    var childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n    var child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        var value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n        value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\n      var path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\n  sparseSnapshotTree.children.forEach(function (tree, key) {\n    func(key, tree);\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\nvar StatsListener = /** @class */function () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n    var delta = __assign({}, newStats);\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n    return delta;\n  };\n  return StatsListener;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\n// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\nvar StatsReporter = /** @class */function () {\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n    // queue our next run.\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n  return StatsReporter;\n}();\nfunction statsReporterIncludeStat(reporter, stat) {\n  reporter.statsToReport_[stat] = true;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n *\r\n * @enum\r\n */\nvar OperationType;\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar AckUserWrite = /** @class */function () {\n  /**\r\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite( /** @inheritDoc */path, /** @inheritDoc */affectedTree, /** @inheritDoc */revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n    this.source = newOperationSourceUser();\n  }\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n  return AckUserWrite;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ListenComplete = /** @class */function () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n  return ListenComplete;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Overwrite = /** @class */function () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n    this.type = OperationType.OVERWRITE;\n  }\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n  return Overwrite;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Merge = /** @class */function () {\n  function Merge( /** @inheritDoc */source, /** @inheritDoc */path, /** @inheritDoc */children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n    this.type = OperationType.MERGE;\n  }\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n  return Merge;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\nvar CacheNode = /** @class */function () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n  return CacheNode;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\nvar EventGenerator = /** @class */function () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\" /* CHILD_CHANGED */ && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction newViewCache(eventCache, serverCache) {\n  return {\n    eventCache: eventCache,\n    serverCache: serverCache\n  };\n}\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\n  return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\n}\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\n  return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\n}\nfunction viewCacheGetCompleteEventSnap(viewCache) {\n  return viewCache.eventCache.isFullyInitialized() ? viewCache.eventCache.getNode() : null;\n}\nfunction viewCacheGetCompleteServerSnap(viewCache) {\n  return viewCache.serverCache.isFullyInitialized() ? viewCache.serverCache.getNode() : null;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\nvar EmptyChildren = function () {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\nvar ImmutableTree = /** @class */function () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n    this.value = value;\n    this.children = children;\n  }\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath - The remainder of the path\r\n   * @param predicate - The predicate to satisfy to return a node\r\n   */\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @returns The subtree at the given path\r\n   */\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath - Path to set value at.\r\n   * @param toSet - Value to set.\r\n   * @returns Resulting tree.\r\n   */\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath - Path to value to remove.\r\n   * @returns Resulting tree.\r\n   */\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath - Path to get value for.\r\n   * @returns Value at path, or null.\r\n   */\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath - Path to replace subtree for.\r\n   * @param newTree - New tree.\r\n   * @returns Resulting tree.\r\n   */\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f - A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n  return ImmutableTree;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\nvar CompoundWrite = /** @class */function () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n  return CompoundWrite;\n}();\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n  return children;\n}\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n    return node;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\nfunction writeTreeChildWrites(writeTree, path) {\n  return newWriteTreeRef(path, writeTree);\n}\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path: path,\n    snap: snap,\n    writeId: writeId,\n    visible: visible\n  });\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\n  }\n  writeTree.lastWriteId = writeId;\n}\n/**\r\n * Record a new merge from user code.\r\n */\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\n  writeTree.allWrites.push({\n    path: path,\n    children: changedChildren,\n    writeId: writeId,\n    visible: true\n  });\n  writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\n  writeTree.lastWriteId = writeId;\n}\nfunction writeTreeGetWrite(writeTree, writeId) {\n  for (var i = 0; i < writeTree.allWrites.length; i++) {\n    var record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\nfunction writeTreeRemoveWrite(writeTree, writeId) {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n  var idx = writeTree.allWrites.findIndex(function (s) {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  var writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n  var removedWriteWasVisible = writeToRemove.visible;\n  var removedWriteOverlapsWithOtherWrites = false;\n  var i = writeTree.allWrites.length - 1;\n  while (removedWriteWasVisible && i >= 0) {\n    var currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (i >= idx && writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\n    } else {\n      var children = writeToRemove.children;\n      each(children, function (childName) {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\n      });\n    }\n    return true;\n  }\n}\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (var childName in writeRecord.children) {\n      if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\nfunction writeTreeResetTree_(writeTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId = writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\nfunction writeTreeDefaultFilter_(write) {\n  return write.visible;\n}\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\n  var compoundWrite = CompoundWrite.empty();\n  for (var i = 0; i < writes.length; ++i) {\n    var write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      var writePath = write.path;\n      var relativePath = void 0;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n        } else ;\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n          } else {\n            var child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              var deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n            }\n          }\n        } else ;\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n        return null;\n      } else {\n        var filter = function (write) {\n          return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n        };\n        var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\n  var completeChildren = ChildrenNode.EMPTY_NODE;\n  var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n        completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n      completeChildren = completeChildren.updateImmediateChild(childName, node);\n    });\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  }\n}\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\n  assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n  var path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n    }\n  }\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\n  var path = pathChild(treePath, childKey);\n  var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n      return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n    } else {\n      return null;\n    }\n  }\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\nfunction writeTreeShadowingWrite(writeTree, path) {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\n  var toIterate;\n  var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n  var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    var nodes = [];\n    var cmp = index.getCompare();\n    var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n    var next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\nfunction newWriteTree() {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n}\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\n  return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\n}\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\n  return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\n  return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\n  return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\n  return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\n}\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\nfunction writeTreeRefChild(writeTreeRef, childName) {\n  return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\n}\nfunction newWriteTreeRef(path, writeTree) {\n  return {\n    treePath: path,\n    writeTree: writeTree\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ChildChangeAccumulator = /** @class */function () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\" /* CHILD_ADDED */ || type === \"child_changed\" /* CHILD_CHANGED */ || type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      var oldType = oldChange.type;\n      if (type === \"child_added\" /* CHILD_ADDED */ && oldType === \"child_removed\" /* CHILD_REMOVED */) {\n        this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type === \"child_removed\" /* CHILD_REMOVED */ && oldType === \"child_added\" /* CHILD_ADDED */) {\n        this.changeMap.delete(childKey);\n      } else if (type === \"child_removed\" /* CHILD_REMOVED */ && oldType === \"child_changed\" /* CHILD_CHANGED */) {\n        this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n      } else if (type === \"child_changed\" /* CHILD_CHANGED */ && oldType === \"child_added\" /* CHILD_ADDED */) {\n        this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n      } else if (type === \"child_changed\" /* CHILD_CHANGED */ && oldType === \"child_changed\" /* CHILD_CHANGED */) {\n        this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n  return ChildChangeAccumulator;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar NoCompleteChildSource_ = /** @class */function () {\n  function NoCompleteChildSource_() {}\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\nvar WriteTreeCompleteChildSource = /** @class */function () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  };\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : viewCacheGetCompleteServerSnap(this.viewCache_);\n    var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n  return WriteTreeCompleteChildSource;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction newViewProcessor(filter) {\n  return {\n    filter: filter\n  };\n}\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\n  assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\n  assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\n}\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\n  var accumulator = new ChildChangeAccumulator();\n  var newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    var overwrite = operation;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode = overwrite.source.tagged || oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path);\n      newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    var merge = operation;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode = merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    var ackUserWrite = operation;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  var changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return {\n    viewCache: newViewCache,\n    changes: changes\n  };\n}\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\n  var eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (accumulator.length > 0 || !oldViewCache.eventCache.isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n      accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\n    }\n  }\n}\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\n  var oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    var newEventCache = void 0,\n      serverNode = void 0;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        var serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n        var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\n      } else {\n        var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\n      }\n    } else {\n      var childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n        var oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        var childChangePath = pathPopFront(changePath);\n        // update child\n        var newEventChild = void 0;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\n  }\n}\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n  var oldServerSnap = oldViewCache.serverCache;\n  var newServerCache;\n  var serverFilter = filterServerNode ? viewProcessor.filter : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n  } else {\n    var childKey = pathGetFront(changePath);\n    if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    var childChangePath = pathPopFront(changePath);\n    var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n    } else {\n      newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n    }\n  }\n  var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n  var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\n}\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n  var oldEventSnap = oldViewCache.eventCache;\n  var newViewCache, newEventCache;\n  var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\n    newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\n  } else {\n    var childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\n      newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n    } else {\n      var childChangePath = pathPopFront(changePath);\n      var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      var newChild = void 0;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        var childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  var curViewCache = viewCache;\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  return curViewCache;\n}\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\n  merge.foreach(function (relativePath, childNode) {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (viewCache.serverCache.getNode().isEmpty() && !viewCache.serverCache.isFullyInitialized()) {\n    return viewCache;\n  }\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  var curViewCache = viewCache;\n  var viewMergeTree;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n  }\n  var serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n    if (serverNode.hasChild(childKey)) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n    var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) && childMergeTree.value === undefined;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  return curViewCache;\n}\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n  // Only filter server node if it is currently filtered\n  var filterServerNode = viewCache.serverCache.isFiltered();\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  var serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n      return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      var changedChildren_1 = new ImmutableTree(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n        changedChildren_1 = changedChildren_1.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    var changedChildren_2 = new ImmutableTree(null);\n    affectedTree.foreach(function (mergePath, value) {\n      var serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n      }\n    });\n    return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n  }\n}\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\n  var oldServerNode = viewCache.serverCache;\n  var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n}\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\n  var complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n    var oldEventCache = viewCache.eventCache.getNode();\n    var newEventCache = void 0;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      var newNode = void 0;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n      } else {\n        var serverChildren = viewCache.serverCache.getNode();\n        assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n        newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\n      }\n      newNode = newNode;\n      newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\n    } else {\n      var childKey = pathGetFront(path);\n      var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n      if (newChild == null && viewCache.serverCache.isCompleteForChild(childKey)) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (newEventCache.isEmpty() && viewCache.serverCache.isFullyInitialized()) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\n        }\n      }\n    }\n    complete = viewCache.serverCache.isFullyInitialized() || writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\nvar View = /** @class */function () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_._queryParams;\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = newViewProcessor(filter);\n    var initialServerCache = initialViewCache.serverCache;\n    var initialEventCache = initialViewCache.eventCache;\n    // Don't filter server node with other filter than index, wait for tagged listen\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n  Object.defineProperty(View.prototype, \"query\", {\n    get: function () {\n      return this.query_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return View;\n}();\nfunction viewGetServerCache(view) {\n  return view.viewCache_.serverCache.getNode();\n}\nfunction viewGetCompleteNode(view) {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\nfunction viewGetCompleteServerCache(view, path) {\n  var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (view.query._queryParams.loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\nfunction viewIsEmpty(view) {\n  return view.eventRegistrations_.length === 0;\n}\nfunction viewAddEventRegistration(view, eventRegistration) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\n  var cancelEvents = [];\n  if (cancelError) {\n    assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n    var path_1 = view.query._path;\n    view.eventRegistrations_.forEach(function (registration) {\n      var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n  if (eventRegistration) {\n    var remaining = [];\n    for (var i = 0; i < view.eventRegistrations_.length; ++i) {\n      var existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\n  if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n    assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\n    assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\n  }\n  var oldViewCache = view.viewCache_;\n  var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n  assert(result.viewCache.serverCache.isFullyInitialized() || !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n  view.viewCache_ = result.viewCache;\n  return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\n}\nfunction viewGetInitialEvents(view, registration) {\n  var eventSnap = view.viewCache_.eventCache;\n  var initialChanges = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    var eventNode = eventSnap.getNode();\n    eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\n}\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\n  var registrations = eventRegistration ? [eventRegistration] : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar referenceConstructor;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\nvar SyncPoint = /** @class */function () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n  return SyncPoint;\n}();\nfunction syncPointSetReferenceConstructor(val) {\n  assert(!referenceConstructor, '__referenceConstructor has already been defined');\n  referenceConstructor = val;\n}\nfunction syncPointGetReferenceConstructor() {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\nfunction syncPointIsEmpty(syncPoint) {\n  return syncPoint.views.size === 0;\n}\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\n  var e_1, _a;\n  var queryId = operation.source.queryId;\n  if (queryId !== null) {\n    var view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\n  } else {\n    var events = [];\n    try {\n      for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return events;\n  }\n}\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\n  var queryId = query._queryIdentifier;\n  var view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\n    var eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n    return new View(query, viewCache);\n  }\n  return view;\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\n  var e_2, _a;\n  var queryId = query._queryIdentifier;\n  var removed = [];\n  var cancelEvents = [];\n  var hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    try {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n          viewQueryId = _d[0],\n          view = _d[1];\n        cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n        if (viewIsEmpty(view)) {\n          syncPoint.views.delete(viewQueryId);\n          // We'll deal with complete views later.\n          if (!view.query._queryParams.loadsAllData()) {\n            removed.push(view.query);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    var view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\n  }\n  return {\n    removed: removed,\n    events: cancelEvents\n  };\n}\nfunction syncPointGetQueryViews(syncPoint) {\n  var e_3, _a;\n  var result = [];\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      if (!view.query._queryParams.loadsAllData()) {\n        result.push(view);\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n  return result;\n}\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\n  var e_4, _a;\n  var serverCache = null;\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      serverCache = serverCache || viewGetCompleteServerCache(view, path);\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n  return serverCache;\n}\nfunction syncPointViewForQuery(syncPoint, query) {\n  var params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    var queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\nfunction syncPointViewExistsForQuery(syncPoint, query) {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\nfunction syncPointHasCompleteView(syncPoint) {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\nfunction syncPointGetCompleteView(syncPoint) {\n  var e_5, _a;\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      if (view.query._queryParams.loadsAllData()) {\n        return view;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n  return null;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar referenceConstructor$1;\nfunction syncTreeSetReferenceConstructor(val) {\n  assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\n  referenceConstructor$1 = val;\n}\nfunction syncTreeGetReferenceConstructor() {\n  assert(referenceConstructor$1, 'Reference.ts has not been loaded');\n  return referenceConstructor$1;\n}\n/**\r\n * Static tracker for next query tag.\r\n */\nvar syncTreeNextQueryTag_ = 1;\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\nvar SyncTree = /** @class */function () {\n  /**\r\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n    this.pendingWriteTree_ = newWriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  return SyncTree;\n}();\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\n  // Record pending write.\n  writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\n  }\n}\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\n}\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\n  if (revert === void 0) {\n    revert = false;\n  }\n  var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    var affectedTree_1 = new ImmutableTree(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n    } else {\n      each(write.children, function (pathString) {\n        affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\n  }\n}\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\n}\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\n}\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeApplyListenComplete(syncTree, path) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\n}\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n      queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  var path = query._path;\n  var maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  var cancelEvents = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (maybeSyncPoint && (query._queryIdentifier === 'default' || syncPointViewExistsForQuery(maybeSyncPoint, query))) {\n    var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n    var removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n    // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n    var removingDefault = -1 !== removed.findIndex(function (query) {\n      return query._queryParams.loadsAllData();\n    });\n    var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n      return syncPointHasCompleteView(parentSyncPoint);\n    });\n    if (removingDefault && !covered) {\n      var subtree = syncTree.syncPointTree_.subtree(path);\n      // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n        // Ok, we've collected all the listens we need. Set them up.\n        for (var i = 0; i < newViews.length; ++i) {\n          var view = newViews[i],\n            newQuery = view.query;\n          var listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\n        }\n      }\n    }\n    // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        var defaultTag = null;\n        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\n      } else {\n        removed.forEach(function (queryToRemove) {\n          var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\n          syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\n        });\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  }\n  return cancelEvents;\n}\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n      queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n      queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\n  var path = query._path;\n  var serverCache = null;\n  var foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  var serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    var subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild(function (childName, childSyncPoint) {\n      var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(childName, completeCache);\n      }\n    });\n  }\n  var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    var queryKey = syncTreeMakeQueryKey_(query);\n    assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n    var tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    var view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\n  var includeHiddenSets = true;\n  var writeTree = syncTree.pendingWriteTree_;\n  var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n    var relativePath = newRelativePath(pathSoFar, path);\n    var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\n    if (serverCache) {\n      return serverCache;\n    }\n  });\n  return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\n}\nfunction syncTreeGetServerValue(syncTree, query) {\n  var path = query._path;\n  var serverCache = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  var serverCacheComplete = serverCache != null;\n  var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n  return viewGetCompleteNode(view);\n}\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\n  return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, /*serverCache=*/null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n  } else {\n    var syncPoint = syncPointTree.get(newEmptyPath());\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n    var events = [];\n    var childName = pathGetFront(operation.path);\n    var childOperation = operation.operationForChild(childName);\n    var childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n    if (syncPoint) {\n      events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n    }\n    return events;\n  }\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\n  var syncPoint = syncPointTree.get(newEmptyPath());\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  var events = [];\n  syncPointTree.children.inorderTraversal(function (childName, childTree) {\n    var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n    var childWritesCache = writeTreeRefChild(writesCache, childName);\n    var childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n  });\n  if (syncPoint) {\n    events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n  }\n  return events;\n}\nfunction syncTreeCreateListenerForView_(syncTree, view) {\n  var query = view.query;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  return {\n    hashFn: function () {\n      var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: function (status) {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        var error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(syncTree, query, /*eventRegistration*/null, error);\n      }\n    }\n  };\n}\n/**\r\n * Return the tag associated with the given query.\r\n */\nfunction syncTreeTagForQuery_(syncTree, query) {\n  var queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\nfunction syncTreeMakeQueryKey_(query) {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\n  return syncTree.tagToQueryMap.get(tag);\n}\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\nfunction syncTreeParseQueryKey_(queryKey) {\n  var splitIndex = queryKey.indexOf('$');\n  assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n/**\r\n * A helper method to apply tagged operations\r\n */\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\n  var syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\n  return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      var views_1 = [];\n      if (maybeChildSyncPoint) {\n        views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, function (_key, childViews) {\n        views_1 = views_1.concat(childViews);\n      });\n      return views_1;\n    }\n  });\n}\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\nfunction syncTreeQueryForListening_(query) {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\nfunction syncTreeRemoveTags_(syncTree, queries) {\n  for (var j = 0; j < queries.length; ++j) {\n    var removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n/**\r\n * Static accessor for query tags.\r\n */\nfunction syncTreeGetNextQueryTag_() {\n  return syncTreeNextQueryTag_++;\n}\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\nfunction syncTreeSetupListener_(syncTree, query, view) {\n  var path = query._path;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  var listener = syncTreeCreateListenerForView_(syncTree, view);\n  var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\n  var subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n        return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n      } else {\n        // No default listener here, flatten any deeper queries into an array\n        var queries_1 = [];\n        if (maybeChildSyncPoint) {\n          queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) {\n            return view.query;\n          }));\n        }\n        each(childMap, function (_key, childQueries) {\n          queries_1 = queries_1.concat(childQueries);\n        });\n        return queries_1;\n      }\n    });\n    for (var i = 0; i < queriesToStop.length; ++i) {\n      var queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\n    }\n  }\n  return events;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ExistingValueProvider = /** @class */function () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n  return ExistingValueProvider;\n}();\nvar DeferredValueProvider = /** @class */function () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n  DeferredValueProvider.prototype.node = function () {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  };\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\nvar generateWithValues = function (values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\nvar resolveComplexDeferredValue = function (op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  var delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\nvar Tree = /** @class */function () {\n  /**\r\n   * @param name - Optional name of the node.\r\n   * @param parent - Optional parent node.\r\n   * @param node - Optional node to wrap.\r\n   */\n  function Tree(name, parent, node) {\n    if (name === void 0) {\n      name = '';\n    }\n    if (parent === void 0) {\n      parent = null;\n    }\n    if (node === void 0) {\n      node = {\n        children: {},\n        childCount: 0\n      };\n    }\n    this.name = name;\n    this.parent = parent;\n    this.node = node;\n  }\n  return Tree;\n}();\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\nfunction treeSubTree(tree, pathObj) {\n  // TODO: Require pathObj to be Path?\n  var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  var child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    var childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n  return child;\n}\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\nfunction treeGetValue(tree) {\n  return tree.node.value;\n}\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\nfunction treeSetValue(tree, value) {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n/**\r\n * @returns Whether the tree has any children.\r\n */\nfunction treeHasChildren(tree) {\n  return tree.node.childCount > 0;\n}\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\nfunction treeIsEmpty(tree) {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\nfunction treeForEachChild(tree, action) {\n  each(tree.node.children, function (child, childTree) {\n    action(new Tree(child, tree, childTree));\n  });\n}\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n  treeForEachChild(tree, function (child) {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\nfunction treeForEachAncestor(tree, action, includeSelf) {\n  var node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\nfunction treeGetPath(tree) {\n  return new Path(tree.parent === null ? tree.name : treeGetPath(tree.parent) + '/' + tree.name);\n}\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\nfunction treeUpdateParents(tree) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\nfunction treeUpdateChild(tree, childName, child) {\n  var childEmpty = treeIsEmpty(child);\n  var childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * True for invalid Firebase keys\r\n */\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\nvar isValidKey = function (key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\nvar isValidPathString = function (pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\nvar isValidRootPathString = function (pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n  return isValidPathString(pathString);\n};\nvar isValidPriority = function (priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' &&\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\n  if (optional && value === undefined) {\n    return;\n  }\n  validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\nvar validateFirebaseData = function (errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\n  }\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + validationPathToErrorString(path) + ' with contents = ' + data.toString());\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + validationPathToErrorString(path));\n  }\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + validationPathToErrorString(path) + \" ('\" + data.substring(0, 50) + \"...')\");\n  }\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + validationPathToErrorString(path) + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + validationPathToErrorString(path) + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\n  var i, curPath;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  }\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n  var errorPrefix$1 = errorPrefix(fnName, 'values');\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\nvar validatePriority = function (fnName, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\nvar validateEventType = function (fnName, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(errorPrefix(fnName, 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\nvar validateKey = function (fnName, argumentName, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n  validatePathString(fnName, argumentName, pathString, optional);\n};\nvar validateWritablePath = function (fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\nvar validateUrl = function (fnName, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, 'url') + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\n  }\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\nvar EventQueue = /** @class */function () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n    this.recursionDepth_ = 0;\n  }\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      var eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\nvar MAX_TRANSACTION_RETRIES = 25;\n/**\r\n * A connection to a single data repository.\r\n */\nvar Repo = /** @class */function () {\n  function Repo(repoInfo_, forceRestClient_, authTokenProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n    this.onDisconnect_ = newSparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n    this.transactionQueueTree_ = new Tree();\n    // TODO: This should be @private but it's used by test_access.js and internal.js\n    this.persistentConnection_ = null;\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n  /**\r\n   * @returns The URL corresponding to the root of this Firebase.\r\n   */\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  return Repo;\n}();\nfunction repoStart(repo, appId, authOverride) {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, repo.authTokenProvider_);\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(function () {\n      return repoOnConnectStatus(repo, /* connectStatus= */true);\n    }, 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n    repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, function (connectStatus) {\n      repoOnConnectStatus(repo, connectStatus);\n    }, function (updates) {\n      repoOnServerInfoUpdate(repo, updates);\n    }, repo.authTokenProvider_, authOverride);\n    repo.server_ = repo.persistentConnection_;\n  }\n  repo.authTokenProvider_.addTokenChangeListener(function (token) {\n    repo.server_.refreshAuthToken(token);\n  });\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () {\n    return new StatsReporter(repo.stats_, repo.server_);\n  });\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: function (query, tag, currentHashFn, onComplete) {\n      var infoEvents = [];\n      var node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\n        setTimeout(function () {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: function () {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: function (query, tag, currentHashFn, onComplete) {\n      repo.server_.listen(query, currentHashFn, tag, function (status, data) {\n        var events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: function (query, tag) {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\nfunction repoServerTime(repo) {\n  var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  var offset = offsetNode.val() || 0;\n  return new Date().getTime() + offset;\n}\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\nfunction repoGenerateServerValues(repo) {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\n  // For testing.\n  repo.dataUpdateCount++;\n  var path = new Path(pathString);\n  data = repo.interceptServerDataCallback_ ? repo.interceptServerDataCallback_(pathString, data) : data;\n  var events = [];\n  if (tag) {\n    if (isMerge) {\n      var taggedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\n    } else {\n      var taggedSnap = nodeFromJSON$1(data);\n      events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\n    }\n  } else if (isMerge) {\n    var changedChildren = map(data, function (raw) {\n      return nodeFromJSON$1(raw);\n    });\n    events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\n  } else {\n    var snap = nodeFromJSON$1(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  var affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n// TODO: This should be @private but it's used by test_access.js and internal.js\nfunction repoInterceptServerData(repo, callback) {\n  repo.interceptServerDataCallback_ = callback;\n}\nfunction repoOnConnectStatus(repo, connectStatus) {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\nfunction repoOnServerInfoUpdate(repo, updates) {\n  each(updates, function (key, value) {\n    repoUpdateInfo(repo, key, value);\n  });\n}\nfunction repoUpdateInfo(repo, pathString, value) {\n  var path = new Path('/.info/' + pathString);\n  var newNode = nodeFromJSON$1(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\nfunction repoGetNextWriteId(repo) {\n  return repo.nextWriteId_++;\n}\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\nfunction repoGetValue(repo, query) {\n  // Only active queries are cached. There is no persisted cache.\n  var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(function (payload) {\n    var node = nodeFromJSON$1(payload);\n    var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n    return Promise.resolve(node);\n  }, function (err) {\n    repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n    return Promise.reject(new Error(err));\n  });\n}\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  var serverValues = repoGenerateServerValues(repo);\n  var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n  var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n  var writeId = repoGetNextWriteId(repo);\n  var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(path.toString(), newNodeUnresolved.val( /*export=*/true), function (status, errorReason) {\n    var success = status === 'ok';\n    if (!success) {\n      warn('set at ' + path + ' failed: ' + status);\n    }\n    var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n  var affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\n  repoLog(repo, 'update', {\n    path: path.toString(),\n    value: childrenToMerge\n  });\n  // Start with our existing data and merge each child into it.\n  var empty = true;\n  var serverValues = repoGenerateServerValues(repo);\n  var changedChildren = {};\n  each(childrenToMerge, function (changedKey, changedValue) {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\n  });\n  if (!empty) {\n    var writeId_1 = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n      var success = status === 'ok';\n      if (!success) {\n        warn('update at ' + path + ' failed: ' + status);\n      }\n      var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\n      var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    });\n    each(childrenToMerge, function (changedPath) {\n      var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\n      repoRerunTransactions(repo, affectedPath);\n    });\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\nfunction repoRunOnDisconnectEvents(repo) {\n  repoLog(repo, 'onDisconnectEvents');\n  var serverValues = repoGenerateServerValues(repo);\n  var resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\n    var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\n    sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n  });\n  var events = [];\n  sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\n    events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\n    var affectedPath = repoAbortTransactions(repo, path);\n    repoRerunTransactions(repo, affectedPath);\n  });\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\n  repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\n  var newNode = nodeFromJSON$1(value);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val( /*export=*/true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\n  var newNode = nodeFromJSON$1(value, priority);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val( /*export=*/true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n  repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n    if (status === 'ok') {\n      each(childrenToMerge, function (childName, childNode) {\n        var newChildNode = nodeFromJSON$1(childNode);\n        sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\n      });\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\n  var events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  var events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\nfunction repoInterrupt(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\nfunction repoResume(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\nfunction repoStats(repo, showDelta) {\n  if (showDelta === void 0) {\n    showDelta = false;\n  }\n  if (typeof console === 'undefined') {\n    return;\n  }\n  var stats;\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n  var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n    return Math.max(currentValue.length, previousValue);\n  }, 0);\n  each(stats, function (stat, value) {\n    var paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (var i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\nfunction repoStatsIncrementCounter(repo, metric) {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\nfunction repoLog(repo) {\n  var varArgs = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    varArgs[_i - 1] = arguments[_i];\n  }\n  var prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n}\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\n  if (callback) {\n    exceptionGuard(function () {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        var code = (status || 'error').toUpperCase();\n        var message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n        var error = new Error(message);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        error.code = code;\n        callback(error);\n      }\n    });\n  }\n}\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\n  repoLog(repo, 'transaction on ' + path);\n  // Initialize transaction.\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n  // Run transaction initially.\n  var currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\n    // Mark as run and add to our queue.\n    transaction.status = 0 /* RUN */;\n    var queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    var nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n    treeSetValue(queueNode, nodeQueue);\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    var priorityForNode = void 0;\n    if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n    var serverValues = repoGenerateServerValues(repo);\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\nfunction repoGetLatestState(repo, path, excludeSets) {\n  return syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) || ChildrenNode.EMPTY_NODE;\n}\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\nfunction repoSendReadyTransactions(repo, node) {\n  if (node === void 0) {\n    node = repo.transactionQueueTree_;\n  }\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n  if (treeGetValue(node)) {\n    var queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === 0 /* RUN */;\n    });\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, function (childNode) {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\nfunction repoSendTransactionQueue(repo, path, queue) {\n  // Mark transactions as sent and increment retry count!\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = repoGetLatestState(repo, path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = 1 /* SENT */;\n    txn.retryCount++;\n    var relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\n  }\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path;\n  // Send the put.\n  repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    repoLog(repo, 'transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n    var events = [];\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more\n      // transactions or sets.\n      var callbacks = [];\n      var _loop_1 = function (i) {\n        queue[i].status = 2 /* COMPLETED */;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this\n          // transaction is complete, it should be set\n          callbacks.push(function () {\n            return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\n          });\n        }\n        queue[i].unwatcher();\n      };\n      for (var i = 0; i < queue.length; i++) {\n        _loop_1(i);\n      }\n      // Now remove the completed transactions.\n      repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\n      // There may be pending transactions that we can now send.\n      repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n      // Finally, trigger onComplete callbacks.\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\n            queue[i].status = 4 /* NEEDS_ABORT */;\n          } else {\n            queue[i].status = 0 /* RUN */;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = 4 /* NEEDS_ABORT */;\n          queue[i].abortReason = status;\n        }\n      }\n      repoRerunTransactions(repo, path);\n    }\n  }, latestHash);\n}\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\nfunction repoRerunTransactions(repo, changedPath) {\n  var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\n  var path = treeGetPath(rootMostTransactionNode);\n  var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n  return path;\n}\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\nfunction repoRerunTransactionQueue(repo, queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  var callbacks = [];\n  var events = [];\n  // Ignore all of the sets we're going to re-run.\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === 0 /* RUN */;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n  var _loop_2 = function (i) {\n    var transaction = queue[i];\n    var relativePath = newRelativePath(path, transaction.path);\n    var abortTransaction = false,\n      abortReason;\n    assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n    if (transaction.status === 4 /* NEEDS_ABORT */) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n    } else if (transaction.status === 0 /* RUN */) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON$1(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = repoGenerateServerValues(repo);\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = 2 /* COMPLETED */;\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(function () {\n            return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\n          });\n        } else {\n          callbacks.push(function () {\n            return queue[i].onComplete(new Error(abortReason), false, null);\n          });\n        }\n      }\n    }\n  };\n  for (var i = 0; i < queue.length; i++) {\n    _loop_2(i);\n  }\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n  // Now fire callbacks, now that we're in a good, known state.\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\nfunction repoGetAncestorTransactionNode(repo, path) {\n  var front;\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  var transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n  return transactionNode;\n}\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\nfunction repoBuildTransactionQueue(repo, transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n}\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\n  var nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n  treeForEachChild(node, function (child) {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\n  var queue = treeGetValue(node);\n  if (queue) {\n    var to = 0;\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== 2 /* COMPLETED */) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n  treeForEachChild(node, function (childNode) {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\nfunction repoAbortTransactions(repo, path) {\n  var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n  var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n  treeForEachAncestor(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  repoAbortTransactionsOnNode(repo, transactionNode);\n  treeForEachDescendant(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  return affectedPath;\n}\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\nfunction repoAbortTransactionsOnNode(repo, node) {\n  var queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    var callbacks = [];\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    var events = [];\n    var lastSent = -1;\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;else if (queue[i].status === 1 /* SENT */) {\n        assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = 3 /* SENT_NEEDS_ABORT */;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\n        if (queue[i].onComplete) {\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n/**\r\n * @returns key value hash\r\n */\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n  var results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n      if (segment.length === 0) {\n        continue;\n      }\n      var kv = segment.split('=');\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return results;\n}\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  }\n  // Catch common error of uninitialized namespace value.\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, /*persistenceKey=*/'', /*includeNamespaceInQueryParams=*/namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\nvar parseDatabaseURL = function (dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n  // Always default to SSL, unless otherwise specified.\n  var secure = true,\n    scheme = 'https',\n    port = 443;\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n    // Parse host, path, and query string.\n    var slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    var questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n    var hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\nvar DataEvent = /** @class */function () {\n  /**\r\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration - The function to call to with the event data. User provided\r\n   * @param snapshot - The data backing the event\r\n   * @param prevName - Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  };\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n  return DataEvent;\n}();\nvar CancelEvent = /** @class */function () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n  return CancelEvent;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\nvar CallbackContext = /** @class */function () {\n  function CallbackContext(snapshotCallback, cancelCallback) {\n    this.snapshotCallback = snapshotCallback;\n    this.cancelCallback = cancelCallback;\n  }\n  CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  };\n  CallbackContext.prototype.onCancel = function (error) {\n    assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\n    return this.cancelCallback.call(null, error);\n  };\n  Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\n    get: function () {\n      return !!this.cancelCallback;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CallbackContext.prototype.matches = function (other) {\n    return this.snapshotCallback === other.snapshotCallback || this.snapshotCallback.userCallback === other.snapshotCallback.userCallback && this.snapshotCallback.context === other.snapshotCallback.context;\n  };\n  return CallbackContext;\n}();\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\nvar OnDisconnect = /** @class */function () {\n  /** @hideconstructor */\n  function OnDisconnect(_repo, _path) {\n    this._repo = _repo;\n    this._path = _path;\n  }\n  /**\r\n   * Cancels all previously queued `onDisconnect()` set or update events for this\r\n   * location and all children.\r\n   *\r\n   * If a write has been queued for this location via a `set()` or `update()` at a\r\n   * parent location, the write at this location will be canceled, though writes\r\n   * to sibling locations will still occur.\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n  OnDisconnect.prototype.cancel = function () {\n    var deferred = new Deferred();\n    repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is deleted when the client is disconnected\r\n   * (due to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n  OnDisconnect.prototype.remove = function () {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value when the\r\n   * client is disconnected (due to closing the browser, navigating to a new page,\r\n   * or network issues).\r\n   *\r\n   * `set()` is especially useful for implementing \"presence\" systems, where a\r\n   * value should be changed or cleared when a user disconnects so that they\r\n   * appear \"offline\" to other users. See\r\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n   * for more information.\r\n   *\r\n   * Note that `onDisconnect` operations are only triggered once. If you want an\r\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n   * the `onDisconnect` operations each time.\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n  OnDisconnect.prototype.set = function (value) {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value and priority\r\n   * when the client is disconnected (due to closing the browser, navigating to a\r\n   * new page, or network issues).\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @param priority - The priority to be written (string, number, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n  OnDisconnect.prototype.setWithPriority = function (value, priority) {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Writes multiple values at this location when the client is disconnected (due\r\n   * to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * The `values` argument contains multiple property-value pairs that will be\r\n   * written to the Database together. Each child property can either be a simple\r\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n   * from the current location to the data to update.\r\n   *\r\n   * As opposed to the `set()` method, `update()` can be use to selectively update\r\n   * only the referenced properties at the current location (instead of replacing\r\n   * all the child properties at the current location).\r\n   *\r\n   * @param values - Object containing multiple values.\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n  OnDisconnect.prototype.update = function (values) {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  return OnDisconnect;\n}();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @internal\r\n */\nvar QueryImpl = /** @class */function () {\n  /**\r\n   * @hideconstructor\r\n   */\n  function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\n    this._repo = _repo;\n    this._path = _path;\n    this._queryParams = _queryParams;\n    this._orderByCalled = _orderByCalled;\n  }\n  Object.defineProperty(QueryImpl.prototype, \"key\", {\n    get: function () {\n      if (pathIsEmpty(this._path)) {\n        return null;\n      } else {\n        return pathGetBack(this._path);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"ref\", {\n    get: function () {\n      return new ReferenceImpl(this._repo, this._path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\n    get: function () {\n      var obj = queryParamsGetQueryObject(this._queryParams);\n      var id = ObjectToUniqueKey(obj);\n      return id === '{}' ? 'default' : id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\n    get: function () {\n      return queryParamsGetQueryObject(this._queryParams);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  QueryImpl.prototype.isEqual = function (other) {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n    var sameRepo = this._repo === other._repo;\n    var samePath = pathEquals(this._path, other._path);\n    var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  QueryImpl.prototype.toJSON = function () {\n    return this.toString();\n  };\n  QueryImpl.prototype.toString = function () {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  };\n  return QueryImpl;\n}();\n/**\r\n * Validates that no other order by call has been made\r\n */\nfunction validateNoPreviousOrderByCall(query, fnName) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n/**\r\n * Validates start/end values for queries.\r\n */\nfunction validateQueryEndpoints(params) {\n  var startNode = null;\n  var endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n  if (params.getIndex() === KEY_INDEX) {\n    var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n    var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n      throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n    }\n  } else {\n    assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n    if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n      throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n    }\n  }\n}\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\nfunction validateLimit(params) {\n  if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n    throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n  }\n}\n/**\r\n * @internal\r\n */\nvar ReferenceImpl = /** @class */function (_super) {\n  __extends(ReferenceImpl, _super);\n  /** @hideconstructor */\n  function ReferenceImpl(repo, path) {\n    return _super.call(this, repo, path, new QueryParams(), false) || this;\n  }\n  Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\n    get: function () {\n      var parentPath = pathParent(this._path);\n      return parentPath === null ? null : new ReferenceImpl(this._repo, parentPath);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceImpl.prototype, \"root\", {\n    get: function () {\n      var ref = this;\n      while (ref.parent !== null) {\n        ref = ref.parent;\n      }\n      return ref;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ReferenceImpl;\n}(QueryImpl);\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\nvar DataSnapshot = /** @class */function () {\n  /**\r\n   * @param _node - A SnapshotNode to wrap.\r\n   * @param ref - The location this snapshot came from.\r\n   * @param _index - The iteration order for this snapshot\r\n   * @hideconstructor\r\n   */\n  function DataSnapshot(_node,\n  /**\r\n   * The location of this DataSnapshot.\r\n   */\n  ref, _index) {\n    this._node = _node;\n    this.ref = ref;\n    this._index = _index;\n  }\n  Object.defineProperty(DataSnapshot.prototype, \"priority\", {\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\n    get: function () {\n      // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n      return this._node.getPriority().val();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\n    get: function () {\n      return this.ref.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"size\", {\n    /** Returns the number of child properties of this `DataSnapshot`. */\n    get: function () {\n      return this._node.numChildren();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Gets another `DataSnapshot` for the location at the specified relative path.\r\n   *\r\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n   * another `DataSnapshot` for the location at the specified relative path. The\r\n   * relative path can either be a simple child name (for example, \"ada\") or a\r\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n   * whose value is `null`) is returned.\r\n   *\r\n   * @param path - A relative path to the location of child data.\r\n   */\n  DataSnapshot.prototype.child = function (path) {\n    var childPath = new Path(path);\n    var childRef = child(this.ref, path);\n    return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n   * efficient than using `snapshot.val() !== null`.\r\n   */\n  DataSnapshot.prototype.exists = function () {\n    return !this._node.isEmpty();\n  };\n  /**\r\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n   *\r\n   * The `exportVal()` method is similar to `val()`, except priority information\r\n   * is included (if available), making it suitable for backing up your data.\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  DataSnapshot.prototype.exportVal = function () {\n    return this._node.val(true);\n  };\n  /**\r\n   * Enumerates the top-level children in the `DataSnapshot`.\r\n   *\r\n   * Because of the way JavaScript objects work, the ordering of data in the\r\n   * JavaScript object returned by `val()` is not guaranteed to match the\r\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n   * where `forEach()` comes in handy. It guarantees the children of a\r\n   * `DataSnapshot` will be iterated in their query order.\r\n   *\r\n   * If no explicit `orderBy*()` method is used, results are returned\r\n   * ordered by key (unless priorities are used, in which case, results are\r\n   * returned by priority).\r\n   *\r\n   * @param action - A function that will be called for each child DataSnapshot.\r\n   * The callback can return true to cancel further enumeration.\r\n   * @returns true if enumeration was canceled due to your callback returning\r\n   * true.\r\n   */\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n    var childrenNode = this._node;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, function (key, node) {\n      return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns true if the specified child path has (non-null) data.\r\n   *\r\n   * @param path - A relative path to the location of a potential child.\r\n   * @returns `true` if data exists at the specified child path; else\r\n   *  `false`.\r\n   */\n  DataSnapshot.prototype.hasChild = function (path) {\n    var childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n   * properties.\r\n   *\r\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n   * children. If it does, you can enumerate them using `forEach()`. If it\r\n   * doesn't, then either this snapshot contains a primitive value (which can be\r\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n   * `null`).\r\n   *\r\n   * @returns true if this snapshot has any children; else false.\r\n   */\n  DataSnapshot.prototype.hasChildren = function () {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  };\n  /**\r\n   * Returns a JSON-serializable representation of this object.\r\n   */\n  DataSnapshot.prototype.toJSON = function () {\n    return this.exportVal();\n  };\n  /**\r\n   * Extracts a JavaScript value from a `DataSnapshot`.\r\n   *\r\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n   * scalar type (string, number, or boolean), an array, or an object. It may\r\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n   * data).\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  DataSnapshot.prototype.val = function () {\n    return this._node.val();\n  };\n  return DataSnapshot;\n}();\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\nfunction ref(db, path) {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\nfunction refFromURL(db, url) {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n  var repoInfo = parsedURL.repoInfo;\n  if (!db._repo.repoInfo_.isCustomHost() && repoInfo.host !== db._repo.repoInfo_.host) {\n    fatal('refFromURL' + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + db._repo.repoInfo_.host + ')');\n  }\n  return ref(db, parsedURL.path.toString());\n}\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\nfunction child(parent, path) {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\nfunction push(parent, value) {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  var now = repoServerTime(parent._repo);\n  var name = nextPushId(now);\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  var thennablePushRef = child(parent, name);\n  var pushRef = child(parent, name);\n  var promise;\n  if (value != null) {\n    promise = set(pushRef, value).then(function () {\n      return pushRef;\n    });\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef;\n}\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\nfunction remove(ref) {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\nfunction set(ref, value) {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value, /*priority=*/null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\nfunction setPriority(ref, priority) {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\nfunction setWithPriority(ref, value, priority) {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\nfunction update(ref, values) {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  var deferred = new Deferred();\n  repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\nfunction get(query) {\n  query = getModularInstance(query);\n  return repoGetValue(query._repo, query).then(function (node) {\n    return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\n  });\n}\n/**\r\n * Represents registration for 'value' events.\r\n */\nvar ValueEventRegistration = /** @class */function () {\n  function ValueEventRegistration(callbackContext) {\n    this.callbackContext = callbackContext;\n  }\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query._queryParams.getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\n  };\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, null);\n      };\n    }\n  };\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  };\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbackContext !== null;\n  };\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might\r\n * let you register a group of callbacks together in the future.\r\n */\nvar ChildEventRegistration = /** @class */function () {\n  function ChildEventRegistration(callbacks) {\n    this.callbacks = callbacks;\n  }\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks, eventToCheck);\n  };\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbacks['cancel'].hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\n    var index = query._queryParams.getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\n  };\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    if (eventData.getEventType() === 'cancel') {\n      var cancelCB_1 = this.callbacks['cancel'];\n      return function () {\n        return cancelCB_1.onCancel(eventData.error);\n      };\n    } else {\n      var cb_1 = this.callbacks[eventData.eventType];\n      return function () {\n        return cb_1.onValue(eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks || !other.callbacks) {\n        return true;\n      } else {\n        var otherKeys = Object.keys(other.callbacks);\n        var thisKeys = Object.keys(this.callbacks);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks[otherKey] || !this.callbacks[thisKey] || other.callbacks[otherKey].matches(this.callbacks[thisKey]));\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks[eventType].matches(_this.callbacks[eventType]);\n            });\n          }\n        }\n      }\n    }\n    return false;\n  };\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks !== null;\n  };\n  return ChildEventRegistration;\n}();\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\n  var _a;\n  var cancelCallback;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n  if (options && options.onlyOnce) {\n    var userCallback_1 = callback;\n    var onceCallback = function (dataSnapshot, previousChildName) {\n      userCallback_1(dataSnapshot, previousChildName);\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n  var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\n  var container = eventType === 'value' ? new ValueEventRegistration(callbackContext) : new ChildEventRegistration((_a = {}, _a[eventType] = callbackContext, _a));\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return function () {\n    return repoRemoveEventCallbackForQuery(query._repo, query, container);\n  };\n}\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\n}\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\n}\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\n}\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\n}\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\n}\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\nfunction off(query, eventType, callback) {\n  var container = null;\n  var callbacks = null;\n  var expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    if (callback) {\n      callbacks = {};\n      callbacks[eventType] = expCallback;\n    }\n    container = new ChildEventRegistration(callbacks);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\nvar QueryConstraint = /** @class */function () {\n  function QueryConstraint() {}\n  return QueryConstraint;\n}();\nvar QueryEndAtConstraint = /** @class */function (_super) {\n  __extends(QueryEndAtConstraint, _super);\n  function QueryEndAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n  QueryEndAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endAt: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n  return QueryEndAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\nfunction endAt(value, key) {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\nvar QueryEndBeforeConstraint = /** @class */function (_super) {\n  __extends(QueryEndBeforeConstraint, _super);\n  function QueryEndBeforeConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n  QueryEndBeforeConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endBefore: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n  return QueryEndBeforeConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\nfunction endBefore(value, key) {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\nvar QueryStartAtConstraint = /** @class */function (_super) {\n  __extends(QueryStartAtConstraint, _super);\n  function QueryStartAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n  QueryStartAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAt: Starting point was already set (by another call to startAt, ' + 'startBefore or equalTo).');\n    }\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n  return QueryStartAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\nfunction startAt(value, key) {\n  if (value === void 0) {\n    value = null;\n  }\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\nvar QueryStartAfterConstraint = /** @class */function (_super) {\n  __extends(QueryStartAfterConstraint, _super);\n  function QueryStartAfterConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n  QueryStartAfterConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAfter: Starting point was already set (by another call to startAt, ' + 'startAfter, or equalTo).');\n    }\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n  return QueryStartAfterConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\nfunction startAfter(value, key) {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\nvar QueryLimitToFirstConstraint = /** @class */function (_super) {\n  __extends(QueryLimitToFirstConstraint, _super);\n  function QueryLimitToFirstConstraint(_limit) {\n    var _this = _super.call(this) || this;\n    _this._limit = _limit;\n    return _this;\n  }\n  QueryLimitToFirstConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\n  };\n  return QueryLimitToFirstConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\nfunction limitToFirst(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\nvar QueryLimitToLastConstraint = /** @class */function (_super) {\n  __extends(QueryLimitToLastConstraint, _super);\n  function QueryLimitToLastConstraint(_limit) {\n    var _this = _super.call(this) || this;\n    _this._limit = _limit;\n    return _this;\n  }\n  QueryLimitToLastConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\n  };\n  return QueryLimitToLastConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\nfunction limitToLast(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n  return new QueryLimitToLastConstraint(limit);\n}\nvar QueryOrderByChildConstraint = /** @class */function (_super) {\n  __extends(QueryOrderByChildConstraint, _super);\n  function QueryOrderByChildConstraint(_path) {\n    var _this = _super.call(this) || this;\n    _this._path = _path;\n    return _this;\n  }\n  QueryOrderByChildConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    var parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\n    }\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams, /*orderByCalled=*/true);\n  };\n  return QueryOrderByChildConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\nfunction orderByChild(path) {\n  if (path === '$key') {\n    throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\n  } else if (path === '$priority') {\n    throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\n  } else if (path === '$value') {\n    throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\nvar QueryOrderByKeyConstraint = /** @class */function (_super) {\n  __extends(QueryOrderByKeyConstraint, _super);\n  function QueryOrderByKeyConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  QueryOrderByKeyConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams, /*orderByCalled=*/true);\n  };\n  return QueryOrderByKeyConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\nfunction orderByKey() {\n  return new QueryOrderByKeyConstraint();\n}\nvar QueryOrderByPriorityConstraint = /** @class */function (_super) {\n  __extends(QueryOrderByPriorityConstraint, _super);\n  function QueryOrderByPriorityConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  QueryOrderByPriorityConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams, /*orderByCalled=*/true);\n  };\n  return QueryOrderByPriorityConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\nfunction orderByPriority() {\n  return new QueryOrderByPriorityConstraint();\n}\nvar QueryOrderByValueConstraint = /** @class */function (_super) {\n  __extends(QueryOrderByValueConstraint, _super);\n  function QueryOrderByValueConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  QueryOrderByValueConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams, /*orderByCalled=*/true);\n  };\n  return QueryOrderByValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\nfunction orderByValue() {\n  return new QueryOrderByValueConstraint();\n}\nvar QueryEqualToValueConstraint = /** @class */function (_super) {\n  __extends(QueryEqualToValueConstraint, _super);\n  function QueryEqualToValueConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n  QueryEqualToValueConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\n  };\n  return QueryEqualToValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\nfunction equalTo(value, key) {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\nfunction query(query) {\n  var e_1, _a;\n  var queryConstraints = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    queryConstraints[_i - 1] = arguments[_i];\n  }\n  var queryImpl = getModularInstance(query);\n  try {\n    for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\n      var constraint = queryConstraints_1_1.value;\n      queryImpl = constraint._apply(queryImpl);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return queryImpl;\n}\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/**\r\n * Creates and caches Repo instances.\r\n */\nvar repos = {};\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\nvar useRestClient = false;\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\nfunction repoManagerApplyEmulatorSettings(repo, host, port) {\n  repo.repoInfo_ = new RepoInfo(host + \":\" + port, /* secure= */false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n  if (repo.repoInfo_.nodeAdmin) {\n    repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n  }\n}\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\nfunction repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin) {\n  var dbUrl = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n    }\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n  }\n  var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  var repoInfo = parsedUrl.repoInfo;\n  var isEmulator;\n  var dbEmulatorHost = undefined;\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n  var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n  }\n  var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider);\n  return new FirebaseDatabase(repo, app);\n}\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\nfunction repoManagerDeleteRepo(repo, appName) {\n  var appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider) {\n  var appRepos = repos[app.name];\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n  var repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n  return repo;\n}\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\nfunction repoManagerForceRestClient(forceRestClient) {\n  useRestClient = forceRestClient;\n}\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\nvar FirebaseDatabase = /** @class */function () {\n  /** @hideconstructor */\n  function FirebaseDatabase(_repoInternal, /** The FirebaseApp associated with this Realtime Database instance. */\n  app) {\n    this._repoInternal = _repoInternal;\n    this.app = app;\n    /** Represents a database instance. */\n    this['type'] = 'database';\n    /** Track if the instance has been used (root or repo accessed) */\n    this._instanceStarted = false;\n  }\n  Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\n    get: function () {\n      if (!this._instanceStarted) {\n        repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\n        this._instanceStarted = true;\n      }\n      return this._repoInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\n    get: function () {\n      if (!this._rootInternal) {\n        this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n      }\n      return this._rootInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  FirebaseDatabase.prototype._delete = function () {\n    this._checkNotDeleted('delete');\n    repoManagerDeleteRepo(this._repo, this.app.name);\n    this._repoInternal = null;\n    this._rootInternal = null;\n    return Promise.resolve();\n  };\n  FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  };\n  return FirebaseDatabase;\n}();\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n */\nfunction useDatabaseEmulator(db, host, port) {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal('Cannot call useEmulator() after instance has already been initialized.');\n  }\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(db._repo, host, port);\n}\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\nfunction goOffline(db) {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\nfunction goOnline(db) {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\nfunction enableLogging$1(logger, persistent) {\n  enableLogging(logger, persistent);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\nfunction serverTimestamp() {\n  return SERVER_TIMESTAMP;\n}\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\nfunction increment(delta) {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\nvar TransactionResult = /** @class */function () {\n  /** @hideconstructor */\n  function TransactionResult( /** Whether the transaction was successfully committed. */\n  committed, /** The resulting data snapshot. */\n  snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  /** Returns a JSON-serializable representation of this object. */\n  TransactionResult.prototype.toJSON = function () {\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n  return TransactionResult;\n}();\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\nfunction runTransaction(ref,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate, options) {\n  var _a;\n  ref = getModularInstance(ref);\n  validateWritablePath('Reference.transaction', ref._path);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'Reference.transaction failed: ' + ref.key + ' is a read-only object.';\n  }\n  var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\n  var deferred = new Deferred();\n  var promiseComplete = function (error, committed, node) {\n    var dataSnapshot = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n  // Add a watch to make sure we get server updates.\n  var unwatcher = onValue(ref, function () {});\n  repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\n  return deferred.promise;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar OnDisconnect$1 = /** @class */function () {\n  function OnDisconnect(_delegate) {\n    this._delegate = _delegate;\n  }\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n    var result = this._delegate.cancel();\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n    var result = this._delegate.remove();\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n    var result = this._delegate.set(value);\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\n    var result = this._delegate.setWithPriority(value, priority);\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n    var result = this._delegate.update(objectToMerge);\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  return OnDisconnect;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar TransactionResult$1 = /** @class */function () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n  return TransactionResult;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\nvar DataSnapshot$1 = /** @class */function () {\n  function DataSnapshot(_database, _delegate) {\n    this._database = _database;\n    this._delegate = _delegate;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  };\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @returns Whether the snapshot contains a non-null value, or is empty.\r\n   */\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns DataSnapshot for child node.\r\n   */\n  DataSnapshot.prototype.child = function (path) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n    // Ensure the childPath is a string (can be a number)\n    path = String(path);\n    validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns Whether the child exists.\r\n   */\n  DataSnapshot.prototype.hasChild = function (path) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @returns The priority.\r\n   */\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each child.\r\n   * @returns True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(function (expDataSnapshot) {\n      return action(new DataSnapshot(_this._database, expDataSnapshot));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  };\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function () {\n      return this._delegate.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @returns The number of children that this DataSnapshot contains.\r\n   */\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  };\n  /**\r\n   * @returns The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  };\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function () {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\nvar Query = /** @class */function () {\n  function Query(database, _delegate) {\n    this.database = database;\n    this._delegate = _delegate;\n  }\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    var _this = this;\n    var _a;\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n    var valueCallback = function (expSnapshot, previousChildName) {\n      callback.call(ret.context, new DataSnapshot$1(_this.database, expSnapshot), previousChildName);\n    };\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n      default:\n        throw new Error(errorPrefix('Query.on', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n  };\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n    if (callback) {\n      var valueCallback = function () {};\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType, valueCallback);\n    } else {\n      off(this._delegate, eventType);\n    }\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n  Query.prototype.get = function () {\n    var _this = this;\n    return get(this._delegate).then(function (expSnapshot) {\n      return new DataSnapshot$1(_this.database, expSnapshot);\n    });\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n  Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\n    var _this = this;\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.on', failureCallbackOrContext, context);\n    var deferred = new Deferred();\n    var valueCallback = function (expSnapshot, previousChildName) {\n      var result = new DataSnapshot$1(_this.database, expSnapshot);\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n      deferred.resolve(result);\n    };\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    var cancelCallback = function (error) {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n      deferred.reject(error);\n    };\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n      default:\n        throw new Error(errorPrefix('Query.once', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  };\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAt(value, name)));\n  };\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAfter(value, name)));\n  };\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  };\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endBefore(value, name)));\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, equalTo(value, name)));\n  };\n  /**\r\n   * @returns URL for this location.\r\n   */\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  };\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n    return this._delegate.isEqual(other._delegate);\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName - The function name (on or once)\r\n   *\r\n   */\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: undefined,\n      context: undefined\n    };\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 'cancelOrContext') + ' must either be a cancel callback or a context object.');\n      }\n    }\n    return ret;\n  };\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function () {\n      return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\nvar Reference = /** @class */function (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n  function Reference(database, _delegate) {\n    var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\n    _this.database = database;\n    _this._delegate = _delegate;\n    return _this;\n  }\n  /** @returns {?string} */\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  };\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n    return new Reference(this.database, child(this._delegate, pathString));\n  };\n  /** @returns {?Reference} */\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  };\n  /** @returns {!Reference} */\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  };\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    var result = set(this._delegate, newVal);\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  Reference.prototype.update = function (values, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    if (Array.isArray(values)) {\n      var newObjectToMerge = {};\n      for (var i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n      values = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n    validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n    var result = update(this._delegate, values);\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\n    var result = setWithPriority(this._delegate, newVal, newPriority);\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n    var result = remove(this._delegate);\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    var _this = this;\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\n    var result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally: applyLocally\n    }).then(function (transactionResult) {\n      return new TransactionResult$1(transactionResult.committed, new DataSnapshot$1(_this.database, transactionResult.snapshot));\n    });\n    if (onComplete) {\n      result.then(function (transactionResult) {\n        return onComplete(null, transactionResult.committed, transactionResult.snapshot);\n      }, function (error) {\n        return onComplete(error, false, null);\n      });\n    }\n    return result;\n  };\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n    var result = setPriority(this._delegate, priority);\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    return result;\n  };\n  Reference.prototype.push = function (value, onComplete) {\n    var _this = this;\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n    var expPromise = push(this._delegate, value);\n    var promise = expPromise.then(function (expRef) {\n      return new Reference(_this.database, expRef);\n    });\n    if (onComplete) {\n      promise.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n    var result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  };\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect$1(new OnDisconnect(this._delegate._repo, this._delegate._path));\n  };\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function () {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function () {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function () {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Class representing a firebase database.\r\n */\nvar Database = /** @class */function () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(_delegate, app) {\n    var _this = this;\n    this._delegate = _delegate;\n    this.app = app;\n    this.INTERNAL = {\n      delete: function () {\n        return _this._delegate._delete();\n      }\n    };\n  }\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host - the emulator host (ex: localhost)\r\n   * @param port - the emulator port (ex: 8080)\r\n   */\n  Database.prototype.useEmulator = function (host, port) {\n    useDatabaseEmulator(this._delegate, host, port);\n  };\n  Database.prototype.ref = function (path) {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n    if (path instanceof Reference) {\n      var childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      var childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @returns Firebase reference.\r\n   */\n  Database.prototype.refFromURL = function (url) {\n    var apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  };\n  // Make individual repo go offline.\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  };\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  };\n  Database.ServerValue = {\n    TIMESTAMP: serverTimestamp(),\n    increment: function (delta) {\n      return increment(delta);\n    }\n  };\n  return Database;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\nvar forceLongPolling = function () {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\nvar forceWebSockets = function () {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\nvar isWebSocketsAvailable = function () {\n  return WebSocketConnection['isAvailable']();\n};\nvar setSecurityDebugCallback = function (ref, callback) {\n  var connection = ref._delegate._repo.persistentConnection_;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  connection.securityDebugCallback_ = callback;\n};\nvar stats = function (ref, showDelta) {\n  repoStats(ref._delegate._repo, showDelta);\n};\nvar statsIncrementCounter = function (ref, metric) {\n  repoStatsIncrementCounter(ref._delegate._repo, metric);\n};\nvar dataUpdateCount = function (ref) {\n  return ref._delegate._repo.dataUpdateCount;\n};\nvar interceptServerData = function (ref, callback) {\n  return repoInterceptServerData(ref._delegate._repo, callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\nfunction initStandalone(_a) {\n  var app = _a.app,\n    url = _a.url,\n    version = _a.version,\n    customAuthImpl = _a.customAuthImpl,\n    namespace = _a.namespace,\n    _b = _a.nodeAdmin,\n    nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\" /* PRIVATE */));\n  return {\n    instance: new Database(repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin), app),\n    namespace: namespace\n  };\n}\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DataConnection = PersistentConnection;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n};\n// RealTimeConnection properties that we use in tests.\nvar RealTimeConnection = Connection;\nvar hijackHash = function (newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\nvar ConnectionTarget = RepoInfo;\nvar queryIdentifier = function (query) {\n  return query._delegate._queryIdentifier;\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\nvar forceRestClient = function (forceRestClient) {\n  repoManagerForceRestClient(forceRestClient);\n};\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ServerValue = Database.ServerValue;\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION);\n  // Register the Database Service with the 'firebase' namespace.\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\n    var url = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return new Database(repoManagerDatabaseFromApp(app, authProvider, url), app);\n  }, \"PUBLIC\" /* PUBLIC */).setServiceProps(\n  // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot$1,\n    enableLogging: enableLogging$1,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\nregisterDatabase(firebase);\nexport { DataSnapshot$1 as DataSnapshot, Database, OnDisconnect$1 as OnDisconnect, Query, Reference, ServerValue, enableLogging$1 as enableLogging, registerDatabase };","map":{"version":3,"names":["firebase","Provider","ComponentContainer","Component","stringify","jsonEval","contains","assert","isNodeSdk","base64","stringToByteArray","Sha1","deepCopy","base64Encode","isMobileCordova","stringLength","Deferred","safeGet","isAdmin","isValidFormat","isEmpty","isReactNative","assertionError","map","querystring","errorPrefix","getModularInstance","validateArgCount","validateCallback","validateContextObject","__spreadArray","__read","__values","__extends","__assign","Logger","LogLevel","name","version","DOMStorageWrapper","domStorage_","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","id","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","_path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","FirebaseAuthTokenProvider","appName_","firebaseOptions_","authProvider_","_this","auth_","getImmediate","optional","then","auth","getToken","forceRefresh","Promise","resolve","catch","reject","addTokenChangeListener","listener","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","notifyForInvalidToken","errorMessage","EmulatorAdminTokenProvider","accessToken","EMULATOR_AUTH_TOKEN","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","repoInfoNeedsQueryParam","repoInfo","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","_a","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","undefined","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","getInstance","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","action","onResponse","curReqNum","r","deferred","request","p","q","_queryObject","outstandingGet","index","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","self_1","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","interrupt","resume","delta","serverTimeOffset","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE","setMaxNode","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","nodeFromJSON","MAX_NODE$1","setNodeFromJSON","setMaxNode$1","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","node_1","childData","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","MIN_PUSH_CHAR","MAX_PUSH_CHAR","MAX_KEY_LEN","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsGetNodeFilter","queryParams","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","status_1","authTokenData","authToken","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","safeToRemove","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","forEach","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","statsReporterIncludeStat","reporter","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","eventGeneratorGenerateEventsForType","registrations","filteredChanges","filter","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","mergeAtPath","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorAckUserWrite","viewProcessorRevertUserWrite","viewProcessorListenComplete","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","viewProcessorCacheHasChild","curViewCache","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor","SyncPoint","views","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","referenceConstructor$1","syncTreeSetReferenceConstructor","syncTreeGetReferenceConstructor","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","syncTreeAckUserWrite","needToReevaluate","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","statsReporter_","infoData_","infoSyncTree_","infoEvents","repoUpdateInfo","serverSyncTree_","repoServerTime","offsetNode","offset","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoInterceptServerData","repoRunOnDisconnectEvents","repoGetNextWriteId","repoGetValue","cached","err","repoLog","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","repoOnDisconnectCancel","repoOnDisconnectSet","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","repoStats","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStatsIncrementCounter","metric","repoStartTransaction","transactionUpdate","unwatcher","applyLocally","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","queueNode","nodeQueue","priorityForNode","currentNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect","cancel","wrapCallback","setWithPriority","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCB_1","cb_1","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","startAfter","QueryLimitToFirstConstraint","_limit","limitToFirst","limit","QueryLimitToLastConstraint","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","FirebaseDatabase","repoManagerDeleteRepo","appName","appRepos","repoManagerForceRestClient","forceRestClient","_repoInternal","_instanceStarted","_rootInternal","_delete","apiName","useDatabaseEmulator","goOffline","goOnline","enableLogging$1","SERVER_TIMESTAMP","serverTimestamp","increment","TransactionResult","committed","runTransaction","promiseComplete","OnDisconnect$1","_delegate","objectToMerge","newObjectToMerge","TransactionResult$1","DataSnapshot$1","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","Database","INTERNAL","useEmulator","ServerValue","TIMESTAMP","forceLongPolling","forceWebSockets","setSecurityDebugCallback","connection","statsIncrementCounter","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","queryIdentifier","TEST_ACCESS","registerDatabase","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports"],"sources":["/Users/macbookpro/Downloads/disney-plus-clone/node_modules/@firebase/database/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nvar name = \"@firebase/database\";\nvar version = \"0.9.10\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    };\r\n    Object.defineProperty(RepoInfo.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        set: function (newHost) {\r\n            if (newHost !== this.internalHost) {\r\n                this.internalHost = newHost;\r\n                if (this.isCacheableHost()) {\r\n                    PersistentStorage.set('host:' + this._host, this.internalHost);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    var connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    var pairs = [];\r\n    each(params, function (key, value) {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar collections = {};\r\nvar reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    var hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    var hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId - An identifier for this connection, used for logging\r\n     * @param repoInfo - The info for the endpoint to send data to.\r\n     * @param applicationId - The Firebase App ID for this project.\r\n     * @param transportSessionId - Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId - Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId - identifier for this transport\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param applicationId - The Firebase App ID for this project.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spreadArray([], __read(this.listeners_[eventType]));\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nvar MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nvar MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n    return ValidationPath;\r\n}());\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    var last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query._queryIdentifier;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                var indexPath = query._path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        var _this = this;\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (_this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    LeafNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        var pathString = query._path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        var child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                var value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\r\n            var path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach(function (tree, key) {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\r\nfunction statsReporterIncludeStat(reporter, stat) {\r\n    reporter.statsToReport_[stat] = true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache: eventCache, serverCache: serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        snap: snap,\r\n        writeId: writeId,\r\n        visible: visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        children: changedChildren,\r\n        writeId: writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (var i = 0; i < writeTree.allWrites.length; i++) {\r\n        var record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    var idx = writeTree.allWrites.findIndex(function (s) {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    var writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    var removedWriteWasVisible = writeToRemove.visible;\r\n    var removedWriteOverlapsWithOtherWrites = false;\r\n    var i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        var currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            var children = writeToRemove.children;\r\n            each(children, function (childName) {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (var childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    var compoundWrite = CompoundWrite.empty();\r\n    for (var i = 0; i < writes.length; ++i) {\r\n        var write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            var writePath = write.path;\r\n            var relativePath = void 0;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        var child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            var deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                var filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    var completeChildren = ChildrenNode.EMPTY_NODE;\r\n    var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    var path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    var path = pathChild(treePath, childKey);\r\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    var toIterate;\r\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        var nodes = [];\r\n        var cmp = index.getCompare();\r\n        var iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        var next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree: writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    };\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter: filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    var accumulator = new ChildChangeAccumulator();\r\n    var newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        var overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        var merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        var ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    var changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes: changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    var eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    var oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var newEventCache = void 0, serverNode = void 0;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                var serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                var completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                var oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                var newEventChild = void 0;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    var oldServerSnap = oldViewCache.serverCache;\r\n    var newServerCache;\r\n    var serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        var newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        var childChangePath = pathPopFront(changePath);\r\n        var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    var oldEventSnap = oldViewCache.eventCache;\r\n    var newViewCache, newEventCache;\r\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            var childChangePath = pathPopFront(changePath);\r\n            var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            var newChild = void 0;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                var childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach(function (relativePath, childNode) {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    var viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    var serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n        if (serverNode.hasChild(childKey)) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n        var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    var filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    var serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            var changedChildren_1 = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        var changedChildren_2 = new ImmutableTree(null);\r\n        affectedTree.foreach(function (mergePath, value) {\r\n            var serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    var oldServerNode = viewCache.serverCache;\r\n    var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    var complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        var oldEventCache = viewCache.eventCache.getNode();\r\n        var newEventCache = void 0;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            var newNode = void 0;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                var serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_._queryParams;\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.serverCache;\r\n        var initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    Object.defineProperty(View.prototype, \"query\", {\r\n        get: function () {\r\n            return this.query_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return View;\r\n}());\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    var cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        var path_1 = view.query._path;\r\n        view.eventRegistrations_.forEach(function (registration) {\r\n            var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        var remaining = [];\r\n        for (var i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            var existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    var oldViewCache = view.viewCache_;\r\n    var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    var eventSnap = view.viewCache_.eventCache;\r\n    var initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        var eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    var registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    return SyncPoint;\r\n}());\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    var e_1, _a;\r\n    var queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        var view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        var events = [];\r\n        try {\r\n            for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    var queryId = query._queryIdentifier;\r\n    var view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        var eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    var e_2, _a;\r\n    var queryId = query._queryIdentifier;\r\n    var removed = [];\r\n    var cancelEvents = [];\r\n    var hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        try {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n                if (viewIsEmpty(view)) {\r\n                    syncPoint.views.delete(viewQueryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.query._queryParams.loadsAllData()) {\r\n                        removed.push(view.query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        var view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed: removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    var e_3, _a;\r\n    var result = [];\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (!view.query._queryParams.loadsAllData()) {\r\n                result.push(view);\r\n            }\r\n        }\r\n    }\r\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_3) throw e_3.error; }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    var e_4, _a;\r\n    var serverCache = null;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n        }\r\n    }\r\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_4) throw e_4.error; }\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    var params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        var queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    var e_5, _a;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (view.query._queryParams.loadsAllData()) {\r\n                return view;\r\n            }\r\n        }\r\n    }\r\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_5) throw e_5.error; }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor$1;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nvar syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    return SyncTree;\r\n}());\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\r\n    if (revert === void 0) { revert = false; }\r\n    var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        var affectedTree_1 = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, function (pathString) {\r\n                affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    var path = query._path;\r\n    var maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    var cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        var removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        var removingDefault = -1 !==\r\n            removed.findIndex(function (query) {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n            return syncPointHasCompleteView(parentSyncPoint);\r\n        });\r\n        if (removingDefault && !covered) {\r\n            var subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (var i = 0; i < newViews.length; ++i) {\r\n                    var view = newViews[i], newQuery = view.query;\r\n                    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                var defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach(function (queryToRemove) {\r\n                    var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    var foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        var subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild(function (childName, childSyncPoint) {\r\n            var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        var queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        var tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        var view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    var includeHiddenSets = true;\r\n    var writeTree = syncTree.pendingWriteTree_;\r\n    var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n        var relativePath = newRelativePath(pathSoFar, path);\r\n        var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete = serverCache != null;\r\n    var serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        var events = [];\r\n        var childName = pathGetFront(operation.path);\r\n        var childOperation = operation.operationForChild(childName);\r\n        var childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    var syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var events = [];\r\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n        var childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        var childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    var query = view.query;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: function () {\r\n            var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: function (status) {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                var error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    var queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    var splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    var syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            var views_1 = [];\r\n            if (maybeChildSyncPoint) {\r\n                views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, function (_key, childViews) {\r\n                views_1 = views_1.concat(childViews);\r\n            });\r\n            return views_1;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (var j = 0; j < queries.length; ++j) {\r\n        var removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    var path = query._path;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    var subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                var queries_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) { return view.query; }));\r\n                }\r\n                each(childMap, function (_key, childQueries) {\r\n                    queries_1 = queries_1.concat(childQueries);\r\n                });\r\n                return queries_1;\r\n            }\r\n        });\r\n        for (var i = 0; i < queriesToStop.length; ++i) {\r\n            var queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    function Tree(name, parent, node) {\r\n        if (name === void 0) { name = ''; }\r\n        if (parent === void 0) { parent = null; }\r\n        if (node === void 0) { node = { children: {}, childCount: 0 }; }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    return Tree;\r\n}());\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    var child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        var childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, function (child, childTree) {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, function (child) {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    var node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    var childEmpty = treeIsEmpty(child);\r\n    var childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, authTokenProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    return Repo;\r\n}());\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(function () { return repoOnConnectStatus(repo, /* connectStatus= */ true); }, 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, function (connectStatus) {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, function (updates) {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(function (token) {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () { return new StatsReporter(repo.stats_, repo.server_); });\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            var infoEvents = [];\r\n            var node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(function () {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: function () { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            repo.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                var events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: function (query, tag) {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    var offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    var path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    var events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            var taggedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            var taggedSnap = nodeFromJSON$1(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        var changedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        var snap = nodeFromJSON$1(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    var affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\n// TODO: This should be @private but it's used by test_access.js and internal.js\r\nfunction repoInterceptServerData(repo, callback) {\r\n    repo.interceptServerDataCallback_ = callback;\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, function (key, value) {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    var path = new Path('/.info/' + pathString);\r\n    var newNode = nodeFromJSON$1(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(function (payload) {\r\n        var node = nodeFromJSON$1(payload);\r\n        var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, function (err) {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n    var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    var writeId = repoGetNextWriteId(repo);\r\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n        var success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    var affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    var empty = true;\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var changedChildren = {};\r\n    each(childrenToMerge, function (changedKey, changedValue) {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        var writeId_1 = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\r\n            var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, function (changedPath) {\r\n            var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\r\n        var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    var events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        var affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    var newNode = nodeFromJSON$1(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    var newNode = nodeFromJSON$1(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, function (childName, childNode) {\r\n                var newChildNode = nodeFromJSON$1(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoStats(repo, showDelta) {\r\n    if (showDelta === void 0) { showDelta = false; }\r\n    if (typeof console === 'undefined') {\r\n        return;\r\n    }\r\n    var stats;\r\n    if (showDelta) {\r\n        if (!repo.statsListener_) {\r\n            repo.statsListener_ = new StatsListener(repo.stats_);\r\n        }\r\n        stats = repo.statsListener_.get();\r\n    }\r\n    else {\r\n        stats = repo.stats_.get();\r\n    }\r\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n        return Math.max(currentValue.length, previousValue);\r\n    }, 0);\r\n    each(stats, function (stat, value) {\r\n        var paddedStat = stat;\r\n        // pad stat names to be the same length (plus 2 extra spaces).\r\n        for (var i = stat.length; i < longestName + 2; i++) {\r\n            paddedStat += ' ';\r\n        }\r\n        console.log(paddedStat + value);\r\n    });\r\n}\r\nfunction repoStatsIncrementCounter(repo, metric) {\r\n    repo.stats_.incrementCounter(metric);\r\n    statsReporterIncludeStat(repo.statsReporter_, metric);\r\n}\r\nfunction repoLog(repo) {\r\n    var varArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        varArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(function () {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                var code = (status || 'error').toUpperCase();\r\n                var message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                var error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        var queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        var nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        var serverValues = repoGenerateServerValues(repo);\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node) {\r\n    if (node === void 0) { node = repo.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        var queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === 0 /* RUN */; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, function (childNode) {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        var relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            var callbacks = [];\r\n            var _loop_1 = function (i) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\r\n                    });\r\n                }\r\n                queue[i].unwatcher();\r\n            };\r\n            for (var i = 0; i < queue.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    var path = treeGetPath(rootMostTransactionNode);\r\n    var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    var _loop_2 = function (i) {\r\n        var transaction = queue[i];\r\n        var relativePath = newRelativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = repoGenerateServerValues(repo);\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\r\n                    });\r\n                }\r\n                else {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(new Error(abortReason), false, null);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < queue.length; i++) {\r\n        _loop_2(i);\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    var transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) { return a.order - b.order; });\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    var nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, function (child) {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, function (childNode) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nvar CallbackContext = /** @class */ (function () {\r\n    function CallbackContext(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    };\r\n    CallbackContext.prototype.onCancel = function (error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    };\r\n    Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\r\n        get: function () {\r\n            return !!this.cancelCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CallbackContext.prototype.matches = function (other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback ===\r\n                other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    };\r\n    return CallbackContext;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function OnDisconnect(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.cancel = function () {\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.remove = function () {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.set = function (value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.update = function (values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nvar QueryImpl = /** @class */ (function () {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    Object.defineProperty(QueryImpl.prototype, \"key\", {\r\n        get: function () {\r\n            if (pathIsEmpty(this._path)) {\r\n                return null;\r\n            }\r\n            else {\r\n                return pathGetBack(this._path);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"ref\", {\r\n        get: function () {\r\n            return new ReferenceImpl(this._repo, this._path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\r\n        get: function () {\r\n            var obj = queryParamsGetQueryObject(this._queryParams);\r\n            var id = ObjectToUniqueKey(obj);\r\n            return id === '{}' ? 'default' : id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\r\n        /**\r\n         * An object representation of the query parameters used by this Query.\r\n         */\r\n        get: function () {\r\n            return queryParamsGetQueryObject(this._queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryImpl.prototype.isEqual = function (other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        var sameRepo = this._repo === other._repo;\r\n        var samePath = pathEquals(this._path, other._path);\r\n        var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    QueryImpl.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    QueryImpl.prototype.toString = function () {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    };\r\n    return QueryImpl;\r\n}());\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    var startNode = null;\r\n    var endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar ReferenceImpl = /** @class */ (function (_super) {\r\n    __extends(ReferenceImpl, _super);\r\n    /** @hideconstructor */\r\n    function ReferenceImpl(repo, path) {\r\n        return _super.call(this, repo, path, new QueryParams(), false) || this;\r\n    }\r\n    Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = pathParent(this._path);\r\n            return parentPath === null\r\n                ? null\r\n                : new ReferenceImpl(this._repo, parentPath);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceImpl.prototype, \"root\", {\r\n        get: function () {\r\n            var ref = this;\r\n            while (ref.parent !== null) {\r\n                ref = ref.parent;\r\n            }\r\n            return ref;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ReferenceImpl;\r\n}(QueryImpl));\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    function DataSnapshot(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    Object.defineProperty(DataSnapshot.prototype, \"priority\", {\r\n        /**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */\r\n        get: function () {\r\n            // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n            return this._node.getPriority().val();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        /**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */\r\n        get: function () {\r\n            return this.ref.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"size\", {\r\n        /** Returns the number of child properties of this `DataSnapshot`. */\r\n        get: function () {\r\n            return this._node.numChildren();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        var childPath = new Path(path);\r\n        var childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        return !this._node.isEmpty();\r\n    };\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        return this._node.val(true);\r\n    };\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, function (key, node) {\r\n            return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        var childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.val = function () {\r\n        return this._node.val();\r\n    };\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    var repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    var now = repoServerTime(parent._repo);\r\n    var name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    var thennablePushRef = child(parent, name);\r\n    var pushRef = child(parent, name);\r\n    var promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(function () { return pushRef; });\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(function (node) {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    };\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, null);\r\n            };\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbackContext !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might\r\n * let you register a group of callbacks together in the future.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(callbacks) {\r\n        this.callbacks = callbacks;\r\n    }\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return contains(this.callbacks, eventToCheck);\r\n    };\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbacks['cancel'].hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    };\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            var cancelCB_1 = this.callbacks['cancel'];\r\n            return function () { return cancelCB_1.onCancel(eventData.error); };\r\n        }\r\n        else {\r\n            var cb_1 = this.callbacks[eventData.eventType];\r\n            return function () {\r\n                return cb_1.onValue(eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks || !other.callbacks) {\r\n                return true;\r\n            }\r\n            else {\r\n                var otherKeys = Object.keys(other.callbacks);\r\n                var thisKeys = Object.keys(this.callbacks);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks[otherKey] ||\r\n                                !this.callbacks[thisKey] ||\r\n                                other.callbacks[otherKey].matches(this.callbacks[thisKey])));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks[eventType].matches(_this.callbacks[eventType]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    var _a;\r\n    var cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        var userCallback_1 = callback;\r\n        var onceCallback = function (dataSnapshot, previousChildName) {\r\n            userCallback_1(dataSnapshot, previousChildName);\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    var container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration((_a = {},\r\n            _a[eventType] = callbackContext,\r\n            _a));\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return function () { return repoRemoveEventCallbackForQuery(query._repo, query, container); };\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    var container = null;\r\n    var callbacks = null;\r\n    var expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        if (callback) {\r\n            callbacks = {};\r\n            callbacks[eventType] = expCallback;\r\n        }\r\n        container = new ChildEventRegistration(callbacks);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nvar QueryConstraint = /** @class */ (function () {\r\n    function QueryConstraint() {\r\n    }\r\n    return QueryConstraint;\r\n}());\r\nvar QueryEndAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndAtConstraint, _super);\r\n    function QueryEndAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nvar QueryEndBeforeConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndBeforeConstraint, _super);\r\n    function QueryEndBeforeConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndBeforeConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndBeforeConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nvar QueryStartAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAtConstraint, _super);\r\n    function QueryStartAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value, key) {\r\n    if (value === void 0) { value = null; }\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nvar QueryStartAfterConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAfterConstraint, _super);\r\n    function QueryStartAfterConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAfterConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAfterConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nvar QueryLimitToFirstConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToFirstConstraint, _super);\r\n    function QueryLimitToFirstConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToFirstConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToFirstConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nvar QueryLimitToLastConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToLastConstraint, _super);\r\n    function QueryLimitToLastConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToLastConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToLastConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nvar QueryOrderByChildConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByChildConstraint, _super);\r\n    function QueryOrderByChildConstraint(_path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._path = _path;\r\n        return _this;\r\n    }\r\n    QueryOrderByChildConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        var parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByChildConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nvar QueryOrderByKeyConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByKeyConstraint, _super);\r\n    function QueryOrderByKeyConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByKeyConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByKeyConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nvar QueryOrderByPriorityConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByPriorityConstraint, _super);\r\n    function QueryOrderByPriorityConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByPriorityConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByPriorityConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nvar QueryOrderByValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByValueConstraint, _super);\r\n    function QueryOrderByValueConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByValueConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nvar QueryEqualToValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEqualToValueConstraint, _super);\r\n    function QueryEqualToValueConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEqualToValueConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    };\r\n    return QueryEqualToValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query) {\r\n    var e_1, _a;\r\n    var queryConstraints = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        queryConstraints[_i - 1] = arguments[_i];\r\n    }\r\n    var queryImpl = getModularInstance(query);\r\n    try {\r\n        for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\r\n            var constraint = queryConstraints_1_1.value;\r\n            queryImpl = constraint._apply(queryImpl);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar repos = {};\r\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\r\nvar useRestClient = false;\r\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port) {\r\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin) {\r\n    var dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n    }\r\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    var repoInfo = parsedUrl.repoInfo;\r\n    var isEmulator;\r\n    var dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined') {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    var authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorAdminTokenProvider()\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider);\r\n    return new FirebaseDatabase(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    var appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider) {\r\n    var appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    var repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nvar FirebaseDatabase = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function FirebaseDatabase(_repoInternal, \r\n    /** The FirebaseApp associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a database instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\r\n        get: function () {\r\n            if (!this._instanceStarted) {\r\n                repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n                this._instanceStarted = true;\r\n            }\r\n            return this._repoInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\r\n        get: function () {\r\n            if (!this._rootInternal) {\r\n                this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n            }\r\n            return this._rootInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseDatabase.prototype._delete = function () {\r\n        this._checkNotDeleted('delete');\r\n        repoManagerDeleteRepo(this._repo, this.app.name);\r\n        this._repoInternal = null;\r\n        this._rootInternal = null;\r\n        return Promise.resolve();\r\n    };\r\n    FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    return FirebaseDatabase;\r\n}());\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n */\r\nfunction useDatabaseEmulator(db, host, port) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(db._repo, host, port);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging$1(logger, persistent) {\r\n    enableLogging(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function TransactionResult(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    TransactionResult.prototype.toJSON = function () {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    var deferred = new Deferred();\r\n    var promiseComplete = function (error, committed, node) {\r\n        var dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    var unwatcher = onValue(ref, function () { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect$1 = /** @class */ (function () {\r\n    function OnDisconnect(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        var result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        var result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        var result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        var result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult$1 = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot$1 = /** @class */ (function () {\r\n    function DataSnapshot(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(function (expDataSnapshot) {\r\n            return action(new DataSnapshot(_this._database, expDataSnapshot));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this._delegate.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    };\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        var _this = this;\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            callback.call(ret.context, new DataSnapshot$1(_this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            var valueCallback = function () { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        var _this = this;\r\n        return get(this._delegate).then(function (expSnapshot) {\r\n            return new DataSnapshot$1(_this.database, expSnapshot);\r\n        });\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', failureCallbackOrContext, context);\r\n        var deferred = new Deferred();\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            var result = new DataSnapshot$1(_this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = function (error) {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    };\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(database, _delegate) {\r\n        var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\r\n        _this.database = database;\r\n        _this._delegate = _delegate;\r\n        return _this;\r\n    }\r\n    /** @returns {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    };\r\n    /** @returns {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    };\r\n    /** @returns {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        var result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.update = function (values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        var result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        var result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        var _this = this;\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        var result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally: applyLocally\r\n        }).then(function (transactionResult) {\r\n            return new TransactionResult$1(transactionResult.committed, new DataSnapshot$1(_this.database, transactionResult.snapshot));\r\n        });\r\n        if (onComplete) {\r\n            result.then(function (transactionResult) {\r\n                return onComplete(null, transactionResult.committed, transactionResult.snapshot);\r\n            }, function (error) { return onComplete(error, false, null); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        var result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        var _this = this;\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        var expPromise = push(this._delegate, value);\r\n        var promise = expPromise.then(function (expRef) { return new Reference(_this.database, expRef); });\r\n        if (onComplete) {\r\n            promise.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        var result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect$1(new OnDisconnect(this._delegate._repo, this._delegate._path));\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(_delegate, app) {\r\n        var _this = this;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this._delegate._delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     */\r\n    Database.prototype.useEmulator = function (host, port) {\r\n        useDatabaseEmulator(this._delegate, host, port);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            var childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            var childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        var apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: serverTimestamp(),\r\n        increment: function (delta) { return increment(delta); }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    var connection = ref._delegate._repo.persistentConnection_;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    connection.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    repoStats(ref._delegate._repo, showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    repoStatsIncrementCounter(ref._delegate._repo, metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref._delegate._repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return repoInterceptServerData(ref._delegate._repo, callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: new Database(repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin), app),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query._delegate._queryIdentifier;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\r\n        var url = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return new Database(repoManagerDatabaseFromApp(app, authProvider, url), app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot$1,\r\n        enableLogging: enableLogging$1,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot$1 as DataSnapshot, Database, OnDisconnect$1 as OnDisconnect, Query, Reference, ServerValue, enableLogging$1 as enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}